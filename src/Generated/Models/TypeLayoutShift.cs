// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> See https://wicg.github.io/layout-instability/#sec-layout-shift and layout_shift.idl. </summary>
    public partial class TypeLayoutShift
    {
        /// <summary> Initializes a new instance of TypeLayoutShift. </summary>
        /// <param name="value"> Score increment produced by this event. </param>
        /// <param name="hadRecentInput"></param>
        /// <param name="lastInputTime"> UTC time in seconds, counted from January 1, 1970. </param>
        /// <param name="sources"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="sources"/> is null. </exception>
        public TypeLayoutShift(float value, bool hadRecentInput, float lastInputTime, IEnumerable<TypeLayoutShiftAttribution> sources)
        {
            Argument.AssertNotNull(sources, nameof(sources));

            Value = value;
            HadRecentInput = hadRecentInput;
            LastInputTime = lastInputTime;
            Sources = sources.ToList();
        }

        /// <summary> Initializes a new instance of TypeLayoutShift. </summary>
        /// <param name="value"> Score increment produced by this event. </param>
        /// <param name="hadRecentInput"></param>
        /// <param name="lastInputTime"> UTC time in seconds, counted from January 1, 1970. </param>
        /// <param name="sources"></param>
        internal TypeLayoutShift(float value, bool hadRecentInput, float lastInputTime, IList<TypeLayoutShiftAttribution> sources)
        {
            Value = value;
            HadRecentInput = hadRecentInput;
            LastInputTime = lastInputTime;
            Sources = sources;
        }

        /// <summary> Score increment produced by this event. </summary>
        public float Value { get; set; }
        /// <summary> Gets or sets the had recent input. </summary>
        public bool HadRecentInput { get; set; }
        /// <summary> UTC time in seconds, counted from January 1, 1970. </summary>
        public float LastInputTime { get; set; }
        /// <summary> Gets the sources. </summary>
        public IList<TypeLayoutShiftAttribution> Sources { get; }
    }
}
