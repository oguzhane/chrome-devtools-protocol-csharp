// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Shared storage was accessed by the associated page.
    /// The following parameters are included in all events.
    /// </summary>
    public partial class EventSharedStorageAccessedParams
    {
        /// <summary> Initializes a new instance of EventSharedStorageAccessedParams. </summary>
        /// <param name="accessTime"> Time of the access. </param>
        /// <param name="type"> Enum value indicating the Shared Storage API method invoked. </param>
        /// <param name="mainFrameId"> DevTools Frame Token for the primary frame tree&apos;s root. </param>
        /// <param name="ownerOrigin"> Serialized origin for the context that invoked the Shared Storage API. </param>
        /// <param name="params">
        /// The sub-parameters warapped by `params` are all optional and their
        /// presence/absence depends on `type`.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="type"/>, <paramref name="mainFrameId"/>, <paramref name="ownerOrigin"/> or <paramref name="params"/> is null. </exception>
        public EventSharedStorageAccessedParams(float accessTime, string type, string mainFrameId, string ownerOrigin, TypeSharedStorageAccessParams @params)
        {
            Argument.AssertNotNull(type, nameof(type));
            Argument.AssertNotNull(mainFrameId, nameof(mainFrameId));
            Argument.AssertNotNull(ownerOrigin, nameof(ownerOrigin));
            Argument.AssertNotNull(@params, nameof(@params));

            AccessTime = accessTime;
            Type = type;
            MainFrameId = mainFrameId;
            OwnerOrigin = ownerOrigin;
            Params = @params;
        }

        /// <summary> Time of the access. </summary>
        public float AccessTime { get; set; }
        /// <summary> Enum value indicating the Shared Storage API method invoked. </summary>
        public string Type { get; set; }
        /// <summary> DevTools Frame Token for the primary frame tree&apos;s root. </summary>
        public string MainFrameId { get; set; }
        /// <summary> Serialized origin for the context that invoked the Shared Storage API. </summary>
        public string OwnerOrigin { get; set; }
        /// <summary>
        /// The sub-parameters warapped by `params` are all optional and their
        /// presence/absence depends on `type`.
        /// </summary>
        public TypeSharedStorageAccessParams Params { get; set; }
    }
}
