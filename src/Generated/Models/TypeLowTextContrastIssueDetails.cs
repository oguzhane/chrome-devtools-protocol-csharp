// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> The TypeLowTextContrastIssueDetails. </summary>
    public partial class TypeLowTextContrastIssueDetails
    {
        /// <summary> Initializes a new instance of TypeLowTextContrastIssueDetails. </summary>
        /// <param name="violatingNodeId">
        /// Unique DOM node identifier used to reference a node that may not have been pushed to the
        /// front-end.
        /// </param>
        /// <param name="violatingNodeSelector"></param>
        /// <param name="contrastRatio"></param>
        /// <param name="thresholdAA"></param>
        /// <param name="thresholdAAA"></param>
        /// <param name="fontSize"></param>
        /// <param name="fontWeight"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="violatingNodeSelector"/>, <paramref name="fontSize"/> or <paramref name="fontWeight"/> is null. </exception>
        public TypeLowTextContrastIssueDetails(int violatingNodeId, string violatingNodeSelector, float contrastRatio, float thresholdAA, float thresholdAAA, string fontSize, string fontWeight)
        {
            Argument.AssertNotNull(violatingNodeSelector, nameof(violatingNodeSelector));
            Argument.AssertNotNull(fontSize, nameof(fontSize));
            Argument.AssertNotNull(fontWeight, nameof(fontWeight));

            ViolatingNodeId = violatingNodeId;
            ViolatingNodeSelector = violatingNodeSelector;
            ContrastRatio = contrastRatio;
            ThresholdAA = thresholdAA;
            ThresholdAAA = thresholdAAA;
            FontSize = fontSize;
            FontWeight = fontWeight;
        }

        /// <summary>
        /// Unique DOM node identifier used to reference a node that may not have been pushed to the
        /// front-end.
        /// </summary>
        public int ViolatingNodeId { get; set; }
        /// <summary> Gets or sets the violating node selector. </summary>
        public string ViolatingNodeSelector { get; set; }
        /// <summary> Gets or sets the contrast ratio. </summary>
        public float ContrastRatio { get; set; }
        /// <summary> Gets or sets the threshold aa. </summary>
        public float ThresholdAA { get; set; }
        /// <summary> Gets or sets the threshold aaa. </summary>
        public float ThresholdAAA { get; set; }
        /// <summary> Gets or sets the font size. </summary>
        public string FontSize { get; set; }
        /// <summary> Gets or sets the font weight. </summary>
        public string FontWeight { get; set; }
    }
}
