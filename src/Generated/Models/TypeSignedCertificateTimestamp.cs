// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Details of a signed certificate timestamp (SCT). </summary>
    public partial class TypeSignedCertificateTimestamp
    {
        /// <summary> Initializes a new instance of TypeSignedCertificateTimestamp. </summary>
        /// <param name="status"> Validation status. </param>
        /// <param name="origin"> Origin. </param>
        /// <param name="logDescription"> Log name / description. </param>
        /// <param name="logId"> Log ID. </param>
        /// <param name="timestamp">
        /// Issuance date. Unlike TimeSinceEpoch, this contains the number of
        /// milliseconds since January 1, 1970, UTC, not the number of seconds.
        /// </param>
        /// <param name="hashAlgorithm"> Hash algorithm. </param>
        /// <param name="signatureAlgorithm"> Signature algorithm. </param>
        /// <param name="signatureData"> Signature data. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="status"/>, <paramref name="origin"/>, <paramref name="logDescription"/>, <paramref name="logId"/>, <paramref name="hashAlgorithm"/>, <paramref name="signatureAlgorithm"/> or <paramref name="signatureData"/> is null. </exception>
        public TypeSignedCertificateTimestamp(string status, string origin, string logDescription, string logId, float timestamp, string hashAlgorithm, string signatureAlgorithm, string signatureData)
        {
            Argument.AssertNotNull(status, nameof(status));
            Argument.AssertNotNull(origin, nameof(origin));
            Argument.AssertNotNull(logDescription, nameof(logDescription));
            Argument.AssertNotNull(logId, nameof(logId));
            Argument.AssertNotNull(hashAlgorithm, nameof(hashAlgorithm));
            Argument.AssertNotNull(signatureAlgorithm, nameof(signatureAlgorithm));
            Argument.AssertNotNull(signatureData, nameof(signatureData));

            Status = status;
            Origin = origin;
            LogDescription = logDescription;
            LogId = logId;
            Timestamp = timestamp;
            HashAlgorithm = hashAlgorithm;
            SignatureAlgorithm = signatureAlgorithm;
            SignatureData = signatureData;
        }

        /// <summary> Validation status. </summary>
        public string Status { get; set; }
        /// <summary> Origin. </summary>
        public string Origin { get; set; }
        /// <summary> Log name / description. </summary>
        public string LogDescription { get; set; }
        /// <summary> Log ID. </summary>
        public string LogId { get; set; }
        /// <summary>
        /// Issuance date. Unlike TimeSinceEpoch, this contains the number of
        /// milliseconds since January 1, 1970, UTC, not the number of seconds.
        /// </summary>
        public float Timestamp { get; set; }
        /// <summary> Hash algorithm. </summary>
        public string HashAlgorithm { get; set; }
        /// <summary> Signature algorithm. </summary>
        public string SignatureAlgorithm { get; set; }
        /// <summary> Signature data. </summary>
        public string SignatureData { get; set; }
    }
}
