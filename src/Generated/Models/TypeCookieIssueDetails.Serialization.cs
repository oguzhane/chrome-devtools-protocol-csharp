// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    [JsonConverter(typeof(TypeCookieIssueDetailsConverter))]
    public partial class TypeCookieIssueDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Cookie))
            {
                writer.WritePropertyName("cookie"u8);
                writer.WriteObjectValue(Cookie);
            }
            if (Optional.IsDefined(RawCookieLine))
            {
                writer.WritePropertyName("rawCookieLine"u8);
                writer.WriteStringValue(RawCookieLine);
            }
            writer.WritePropertyName("cookieWarningReasons"u8);
            writer.WriteStartArray();
            foreach (var item in CookieWarningReasons)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            writer.WritePropertyName("cookieExclusionReasons"u8);
            writer.WriteStartArray();
            foreach (var item in CookieExclusionReasons)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            writer.WritePropertyName("operation"u8);
            writer.WriteStringValue(Operation);
            if (Optional.IsDefined(SiteForCookies))
            {
                writer.WritePropertyName("siteForCookies"u8);
                writer.WriteStringValue(SiteForCookies);
            }
            if (Optional.IsDefined(CookieUrl))
            {
                writer.WritePropertyName("cookieUrl"u8);
                writer.WriteStringValue(CookieUrl);
            }
            if (Optional.IsDefined(Request))
            {
                writer.WritePropertyName("request"u8);
                writer.WriteObjectValue(Request);
            }
            writer.WriteEndObject();
        }

        internal static TypeCookieIssueDetails DeserializeTypeCookieIssueDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<TypeAffectedCookie> cookie = default;
            Optional<string> rawCookieLine = default;
            IList<string> cookieWarningReasons = default;
            IList<string> cookieExclusionReasons = default;
            string operation = default;
            Optional<string> siteForCookies = default;
            Optional<string> cookieUrl = default;
            Optional<TypeAffectedRequest> request = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("cookie"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cookie = TypeAffectedCookie.DeserializeTypeAffectedCookie(property.Value);
                    continue;
                }
                if (property.NameEquals("rawCookieLine"u8))
                {
                    rawCookieLine = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cookieWarningReasons"u8))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    cookieWarningReasons = array;
                    continue;
                }
                if (property.NameEquals("cookieExclusionReasons"u8))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    cookieExclusionReasons = array;
                    continue;
                }
                if (property.NameEquals("operation"u8))
                {
                    operation = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("siteForCookies"u8))
                {
                    siteForCookies = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cookieUrl"u8))
                {
                    cookieUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("request"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    request = TypeAffectedRequest.DeserializeTypeAffectedRequest(property.Value);
                    continue;
                }
            }
            return new TypeCookieIssueDetails(cookie.Value, rawCookieLine.Value, cookieWarningReasons, cookieExclusionReasons, operation, siteForCookies.Value, cookieUrl.Value, request.Value);
        }

        internal partial class TypeCookieIssueDetailsConverter : JsonConverter<TypeCookieIssueDetails>
        {
            public override void Write(Utf8JsonWriter writer, TypeCookieIssueDetails model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override TypeCookieIssueDetails Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeTypeCookieIssueDetails(document.RootElement);
            }
        }
    }
}
