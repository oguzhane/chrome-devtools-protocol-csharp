// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> CSS stylesheet metainformation. </summary>
    public partial class TypeCssStyleSheetHeader
    {
        /// <summary> Initializes a new instance of TypeCssStyleSheetHeader. </summary>
        /// <param name="styleSheetId"> The stylesheet identifier. </param>
        /// <param name="frameId"> Owner frame identifier. </param>
        /// <param name="sourceURL">
        /// Stylesheet resource URL. Empty if this is a constructed stylesheet created using
        /// new CSSStyleSheet() (but non-empty if this is a constructed sylesheet imported
        /// as a CSS module script).
        /// </param>
        /// <param name="origin"> Stylesheet origin. </param>
        /// <param name="title"> Stylesheet title. </param>
        /// <param name="disabled"> Denotes whether the stylesheet is disabled. </param>
        /// <param name="isInline">
        /// Whether this stylesheet is created for STYLE tag by parser. This flag is not set for
        /// document.written STYLE tags.
        /// </param>
        /// <param name="isMutable">
        /// Whether this stylesheet is mutable. Inline stylesheets become mutable
        /// after they have been modified via CSSOM API.
        /// &lt;link&gt; element&apos;s stylesheets become mutable only if DevTools modifies them.
        /// Constructed stylesheets (new CSSStyleSheet()) are mutable immediately after creation.
        /// </param>
        /// <param name="isConstructed">
        /// True if this stylesheet is created through new CSSStyleSheet() or imported as a
        /// CSS module script.
        /// </param>
        /// <param name="startLine"> Line offset of the stylesheet within the resource (zero based). </param>
        /// <param name="startColumn"> Column offset of the stylesheet within the resource (zero based). </param>
        /// <param name="length"> Size of the content (in characters). </param>
        /// <param name="endLine"> Line offset of the end of the stylesheet within the resource (zero based). </param>
        /// <param name="endColumn"> Column offset of the end of the stylesheet within the resource (zero based). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="styleSheetId"/>, <paramref name="frameId"/>, <paramref name="sourceURL"/>, <paramref name="origin"/> or <paramref name="title"/> is null. </exception>
        public TypeCssStyleSheetHeader(string styleSheetId, string frameId, string sourceURL, string origin, string title, bool disabled, bool isInline, bool isMutable, bool isConstructed, float startLine, float startColumn, float length, float endLine, float endColumn)
        {
            Argument.AssertNotNull(styleSheetId, nameof(styleSheetId));
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(sourceURL, nameof(sourceURL));
            Argument.AssertNotNull(origin, nameof(origin));
            Argument.AssertNotNull(title, nameof(title));

            StyleSheetId = styleSheetId;
            FrameId = frameId;
            SourceURL = sourceURL;
            Origin = origin;
            Title = title;
            Disabled = disabled;
            IsInline = isInline;
            IsMutable = isMutable;
            IsConstructed = isConstructed;
            StartLine = startLine;
            StartColumn = startColumn;
            Length = length;
            EndLine = endLine;
            EndColumn = endColumn;
        }

        /// <summary> Initializes a new instance of TypeCssStyleSheetHeader. </summary>
        /// <param name="styleSheetId"> The stylesheet identifier. </param>
        /// <param name="frameId"> Owner frame identifier. </param>
        /// <param name="sourceURL">
        /// Stylesheet resource URL. Empty if this is a constructed stylesheet created using
        /// new CSSStyleSheet() (but non-empty if this is a constructed sylesheet imported
        /// as a CSS module script).
        /// </param>
        /// <param name="sourceMapURL"> URL of source map associated with the stylesheet (if any). </param>
        /// <param name="origin"> Stylesheet origin. </param>
        /// <param name="title"> Stylesheet title. </param>
        /// <param name="ownerNode"> The backend id for the owner node of the stylesheet. </param>
        /// <param name="disabled"> Denotes whether the stylesheet is disabled. </param>
        /// <param name="hasSourceURL"> Whether the sourceURL field value comes from the sourceURL comment. </param>
        /// <param name="isInline">
        /// Whether this stylesheet is created for STYLE tag by parser. This flag is not set for
        /// document.written STYLE tags.
        /// </param>
        /// <param name="isMutable">
        /// Whether this stylesheet is mutable. Inline stylesheets become mutable
        /// after they have been modified via CSSOM API.
        /// &lt;link&gt; element&apos;s stylesheets become mutable only if DevTools modifies them.
        /// Constructed stylesheets (new CSSStyleSheet()) are mutable immediately after creation.
        /// </param>
        /// <param name="isConstructed">
        /// True if this stylesheet is created through new CSSStyleSheet() or imported as a
        /// CSS module script.
        /// </param>
        /// <param name="startLine"> Line offset of the stylesheet within the resource (zero based). </param>
        /// <param name="startColumn"> Column offset of the stylesheet within the resource (zero based). </param>
        /// <param name="length"> Size of the content (in characters). </param>
        /// <param name="endLine"> Line offset of the end of the stylesheet within the resource (zero based). </param>
        /// <param name="endColumn"> Column offset of the end of the stylesheet within the resource (zero based). </param>
        internal TypeCssStyleSheetHeader(string styleSheetId, string frameId, string sourceURL, string sourceMapURL, string origin, string title, int? ownerNode, bool disabled, bool? hasSourceURL, bool isInline, bool isMutable, bool isConstructed, float startLine, float startColumn, float length, float endLine, float endColumn)
        {
            StyleSheetId = styleSheetId;
            FrameId = frameId;
            SourceURL = sourceURL;
            SourceMapURL = sourceMapURL;
            Origin = origin;
            Title = title;
            OwnerNode = ownerNode;
            Disabled = disabled;
            HasSourceURL = hasSourceURL;
            IsInline = isInline;
            IsMutable = isMutable;
            IsConstructed = isConstructed;
            StartLine = startLine;
            StartColumn = startColumn;
            Length = length;
            EndLine = endLine;
            EndColumn = endColumn;
        }

        /// <summary> The stylesheet identifier. </summary>
        public string StyleSheetId { get; set; }
        /// <summary> Owner frame identifier. </summary>
        public string FrameId { get; set; }
        /// <summary>
        /// Stylesheet resource URL. Empty if this is a constructed stylesheet created using
        /// new CSSStyleSheet() (but non-empty if this is a constructed sylesheet imported
        /// as a CSS module script).
        /// </summary>
        public string SourceURL { get; set; }
        /// <summary> URL of source map associated with the stylesheet (if any). </summary>
        public string SourceMapURL { get; set; }
        /// <summary> Stylesheet origin. </summary>
        public string Origin { get; set; }
        /// <summary> Stylesheet title. </summary>
        public string Title { get; set; }
        /// <summary> The backend id for the owner node of the stylesheet. </summary>
        public int? OwnerNode { get; set; }
        /// <summary> Denotes whether the stylesheet is disabled. </summary>
        public bool Disabled { get; set; }
        /// <summary> Whether the sourceURL field value comes from the sourceURL comment. </summary>
        public bool? HasSourceURL { get; set; }
        /// <summary>
        /// Whether this stylesheet is created for STYLE tag by parser. This flag is not set for
        /// document.written STYLE tags.
        /// </summary>
        public bool IsInline { get; set; }
        /// <summary>
        /// Whether this stylesheet is mutable. Inline stylesheets become mutable
        /// after they have been modified via CSSOM API.
        /// &lt;link&gt; element&apos;s stylesheets become mutable only if DevTools modifies them.
        /// Constructed stylesheets (new CSSStyleSheet()) are mutable immediately after creation.
        /// </summary>
        public bool IsMutable { get; set; }
        /// <summary>
        /// True if this stylesheet is created through new CSSStyleSheet() or imported as a
        /// CSS module script.
        /// </summary>
        public bool IsConstructed { get; set; }
        /// <summary> Line offset of the stylesheet within the resource (zero based). </summary>
        public float StartLine { get; set; }
        /// <summary> Column offset of the stylesheet within the resource (zero based). </summary>
        public float StartColumn { get; set; }
        /// <summary> Size of the content (in characters). </summary>
        public float Length { get; set; }
        /// <summary> Line offset of the end of the stylesheet within the resource (zero based). </summary>
        public float EndLine { get; set; }
        /// <summary> Column offset of the end of the stylesheet within the resource (zero based). </summary>
        public float EndColumn { get; set; }
    }
}
