// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Depending on the concrete errorType, different properties are set. </summary>
    public partial class TypeGenericIssueDetails
    {
        /// <summary> Initializes a new instance of TypeGenericIssueDetails. </summary>
        /// <param name="errorType"> Issues with the same errorType are aggregated in the frontend. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="errorType"/> is null. </exception>
        public TypeGenericIssueDetails(string errorType)
        {
            Argument.AssertNotNull(errorType, nameof(errorType));

            ErrorType = errorType;
        }

        /// <summary> Initializes a new instance of TypeGenericIssueDetails. </summary>
        /// <param name="errorType"> Issues with the same errorType are aggregated in the frontend. </param>
        /// <param name="frameId"> Unique frame identifier. </param>
        /// <param name="violatingNodeId">
        /// Unique DOM node identifier used to reference a node that may not have been pushed to the
        /// front-end.
        /// </param>
        internal TypeGenericIssueDetails(string errorType, string frameId, int? violatingNodeId)
        {
            ErrorType = errorType;
            FrameId = frameId;
            ViolatingNodeId = violatingNodeId;
        }

        /// <summary> Issues with the same errorType are aggregated in the frontend. </summary>
        public string ErrorType { get; set; }
        /// <summary> Unique frame identifier. </summary>
        public string FrameId { get; set; }
        /// <summary>
        /// Unique DOM node identifier used to reference a node that may not have been pushed to the
        /// front-end.
        /// </summary>
        public int? ViolatingNodeId { get; set; }
    }
}
