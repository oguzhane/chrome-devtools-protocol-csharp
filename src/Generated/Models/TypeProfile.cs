// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Profile. </summary>
    public partial class TypeProfile
    {
        /// <summary> Initializes a new instance of TypeProfile. </summary>
        /// <param name="nodes"> The list of profile nodes. First item is the root node. </param>
        /// <param name="startTime"> Profiling start timestamp in microseconds. </param>
        /// <param name="endTime"> Profiling end timestamp in microseconds. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="nodes"/> is null. </exception>
        public TypeProfile(IEnumerable<TypeProfileNode> nodes, float startTime, float endTime)
        {
            Argument.AssertNotNull(nodes, nameof(nodes));

            Nodes = nodes.ToList();
            StartTime = startTime;
            EndTime = endTime;
            Samples = new ChangeTrackingList<int>();
            TimeDeltas = new ChangeTrackingList<int>();
        }

        /// <summary> Initializes a new instance of TypeProfile. </summary>
        /// <param name="nodes"> The list of profile nodes. First item is the root node. </param>
        /// <param name="startTime"> Profiling start timestamp in microseconds. </param>
        /// <param name="endTime"> Profiling end timestamp in microseconds. </param>
        /// <param name="samples"> Ids of samples top nodes. </param>
        /// <param name="timeDeltas">
        /// Time intervals between adjacent samples in microseconds. The first delta is relative to the
        /// profile startTime.
        /// </param>
        internal TypeProfile(IList<TypeProfileNode> nodes, float startTime, float endTime, IList<int> samples, IList<int> timeDeltas)
        {
            Nodes = nodes;
            StartTime = startTime;
            EndTime = endTime;
            Samples = samples;
            TimeDeltas = timeDeltas;
        }

        /// <summary> The list of profile nodes. First item is the root node. </summary>
        public IList<TypeProfileNode> Nodes { get; }
        /// <summary> Profiling start timestamp in microseconds. </summary>
        public float StartTime { get; set; }
        /// <summary> Profiling end timestamp in microseconds. </summary>
        public float EndTime { get; set; }
        /// <summary> Ids of samples top nodes. </summary>
        public IList<int> Samples { get; }
        /// <summary>
        /// Time intervals between adjacent samples in microseconds. The first delta is relative to the
        /// profile startTime.
        /// </summary>
        public IList<int> TimeDeltas { get; }
    }
}
