// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> The TypePropertyPreview. </summary>
    public partial class TypePropertyPreview
    {
        /// <summary> Initializes a new instance of TypePropertyPreview. </summary>
        /// <param name="name"> Property name. </param>
        /// <param name="type"> Object type. Accessor means that the property itself is an accessor property. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="type"/> is null. </exception>
        public TypePropertyPreview(string name, string type)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(type, nameof(type));

            Name = name;
            Type = type;
        }

        /// <summary> Initializes a new instance of TypePropertyPreview. </summary>
        /// <param name="name"> Property name. </param>
        /// <param name="type"> Object type. Accessor means that the property itself is an accessor property. </param>
        /// <param name="value"> User-friendly property value string. </param>
        /// <param name="valuePreview"> Nested value preview. </param>
        /// <param name="subtype"> Object subtype hint. Specified for `object` type values only. </param>
        internal TypePropertyPreview(string name, string type, string value, TypeObjectPreview valuePreview, string subtype)
        {
            Name = name;
            Type = type;
            Value = value;
            ValuePreview = valuePreview;
            Subtype = subtype;
        }

        /// <summary> Property name. </summary>
        public string Name { get; set; }
        /// <summary> Object type. Accessor means that the property itself is an accessor property. </summary>
        public string Type { get; set; }
        /// <summary> User-friendly property value string. </summary>
        public string Value { get; set; }
        /// <summary> Nested value preview. </summary>
        public TypeObjectPreview ValuePreview { get; set; }
        /// <summary> Object subtype hint. Specified for `object` type values only. </summary>
        public string Subtype { get; set; }
    }
}
