// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Fired when frame has been attached to its parent. </summary>
    public partial class EventFrameAttachedParams
    {
        /// <summary> Initializes a new instance of EventFrameAttachedParams. </summary>
        /// <param name="frameId"> Id of the frame that has been attached. </param>
        /// <param name="parentFrameId"> Parent frame identifier. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="frameId"/> or <paramref name="parentFrameId"/> is null. </exception>
        public EventFrameAttachedParams(string frameId, string parentFrameId)
        {
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(parentFrameId, nameof(parentFrameId));

            FrameId = frameId;
            ParentFrameId = parentFrameId;
        }

        /// <summary> Initializes a new instance of EventFrameAttachedParams. </summary>
        /// <param name="frameId"> Id of the frame that has been attached. </param>
        /// <param name="parentFrameId"> Parent frame identifier. </param>
        /// <param name="stack"> JavaScript stack trace of when frame was attached, only set if frame initiated from script. </param>
        internal EventFrameAttachedParams(string frameId, string parentFrameId, TypeStackTrace stack)
        {
            FrameId = frameId;
            ParentFrameId = parentFrameId;
            Stack = stack;
        }

        /// <summary> Id of the frame that has been attached. </summary>
        public string FrameId { get; set; }
        /// <summary> Parent frame identifier. </summary>
        public string ParentFrameId { get; set; }
        /// <summary> JavaScript stack trace of when frame was attached, only set if frame initiated from script. </summary>
        public TypeStackTrace Stack { get; set; }
    }
}
