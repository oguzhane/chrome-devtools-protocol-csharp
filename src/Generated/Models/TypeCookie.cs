// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Cookie object. </summary>
    public partial class TypeCookie
    {
        /// <summary> Initializes a new instance of TypeCookie. </summary>
        /// <param name="name"> Cookie name. </param>
        /// <param name="value"> Cookie value. </param>
        /// <param name="domain"> Cookie domain. </param>
        /// <param name="path"> Cookie path. </param>
        /// <param name="expires"> Cookie expiration date as the number of seconds since the UNIX epoch. </param>
        /// <param name="size"> Cookie size. </param>
        /// <param name="httpOnly"> True if cookie is http-only. </param>
        /// <param name="secure"> True if cookie is secure. </param>
        /// <param name="session"> True in case of session cookie. </param>
        /// <param name="priority"> Cookie Priority. </param>
        /// <param name="sameParty"> True if cookie is SameParty. </param>
        /// <param name="sourceScheme"> Cookie source scheme type. </param>
        /// <param name="sourcePort">
        /// Cookie source port. Valid values are {-1, [1, 65535]}, -1 indicates an unspecified port.
        /// An unspecified port value allows protocol clients to emulate legacy cookie scope for the port.
        /// This is a temporary ability and it will be removed in the future.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="value"/>, <paramref name="domain"/>, <paramref name="path"/>, <paramref name="priority"/> or <paramref name="sourceScheme"/> is null. </exception>
        public TypeCookie(string name, string value, string domain, string path, float expires, int size, bool httpOnly, bool secure, bool session, string priority, bool sameParty, string sourceScheme, int sourcePort)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(value, nameof(value));
            Argument.AssertNotNull(domain, nameof(domain));
            Argument.AssertNotNull(path, nameof(path));
            Argument.AssertNotNull(priority, nameof(priority));
            Argument.AssertNotNull(sourceScheme, nameof(sourceScheme));

            Name = name;
            Value = value;
            Domain = domain;
            Path = path;
            Expires = expires;
            Size = size;
            HttpOnly = httpOnly;
            Secure = secure;
            Session = session;
            Priority = priority;
            SameParty = sameParty;
            SourceScheme = sourceScheme;
            SourcePort = sourcePort;
        }

        /// <summary> Initializes a new instance of TypeCookie. </summary>
        /// <param name="name"> Cookie name. </param>
        /// <param name="value"> Cookie value. </param>
        /// <param name="domain"> Cookie domain. </param>
        /// <param name="path"> Cookie path. </param>
        /// <param name="expires"> Cookie expiration date as the number of seconds since the UNIX epoch. </param>
        /// <param name="size"> Cookie size. </param>
        /// <param name="httpOnly"> True if cookie is http-only. </param>
        /// <param name="secure"> True if cookie is secure. </param>
        /// <param name="session"> True in case of session cookie. </param>
        /// <param name="sameSite"> Cookie SameSite type. </param>
        /// <param name="priority"> Cookie Priority. </param>
        /// <param name="sameParty"> True if cookie is SameParty. </param>
        /// <param name="sourceScheme"> Cookie source scheme type. </param>
        /// <param name="sourcePort">
        /// Cookie source port. Valid values are {-1, [1, 65535]}, -1 indicates an unspecified port.
        /// An unspecified port value allows protocol clients to emulate legacy cookie scope for the port.
        /// This is a temporary ability and it will be removed in the future.
        /// </param>
        /// <param name="partitionKey">
        /// Cookie partition key. The site of the top-level URL the browser was visiting at the start
        /// of the request to the endpoint that set the cookie.
        /// </param>
        /// <param name="partitionKeyOpaque"> True if cookie partition key is opaque. </param>
        internal TypeCookie(string name, string value, string domain, string path, float expires, int size, bool httpOnly, bool secure, bool session, string sameSite, string priority, bool sameParty, string sourceScheme, int sourcePort, string partitionKey, bool? partitionKeyOpaque)
        {
            Name = name;
            Value = value;
            Domain = domain;
            Path = path;
            Expires = expires;
            Size = size;
            HttpOnly = httpOnly;
            Secure = secure;
            Session = session;
            SameSite = sameSite;
            Priority = priority;
            SameParty = sameParty;
            SourceScheme = sourceScheme;
            SourcePort = sourcePort;
            PartitionKey = partitionKey;
            PartitionKeyOpaque = partitionKeyOpaque;
        }

        /// <summary> Cookie name. </summary>
        public string Name { get; set; }
        /// <summary> Cookie value. </summary>
        public string Value { get; set; }
        /// <summary> Cookie domain. </summary>
        public string Domain { get; set; }
        /// <summary> Cookie path. </summary>
        public string Path { get; set; }
        /// <summary> Cookie expiration date as the number of seconds since the UNIX epoch. </summary>
        public float Expires { get; set; }
        /// <summary> Cookie size. </summary>
        public int Size { get; set; }
        /// <summary> True if cookie is http-only. </summary>
        public bool HttpOnly { get; set; }
        /// <summary> True if cookie is secure. </summary>
        public bool Secure { get; set; }
        /// <summary> True in case of session cookie. </summary>
        public bool Session { get; set; }
        /// <summary> Cookie SameSite type. </summary>
        public string SameSite { get; set; }
        /// <summary> Cookie Priority. </summary>
        public string Priority { get; set; }
        /// <summary> True if cookie is SameParty. </summary>
        public bool SameParty { get; set; }
        /// <summary> Cookie source scheme type. </summary>
        public string SourceScheme { get; set; }
        /// <summary>
        /// Cookie source port. Valid values are {-1, [1, 65535]}, -1 indicates an unspecified port.
        /// An unspecified port value allows protocol clients to emulate legacy cookie scope for the port.
        /// This is a temporary ability and it will be removed in the future.
        /// </summary>
        public int SourcePort { get; set; }
        /// <summary>
        /// Cookie partition key. The site of the top-level URL the browser was visiting at the start
        /// of the request to the endpoint that set the cookie.
        /// </summary>
        public string PartitionKey { get; set; }
        /// <summary> True if cookie partition key is opaque. </summary>
        public bool? PartitionKeyOpaque { get; set; }
    }
}
