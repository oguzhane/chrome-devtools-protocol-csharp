// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Fired when request for resources within a .wbn file failed. </summary>
    public partial class EventSubresourceWebBundleInnerResponseErrorParams
    {
        /// <summary> Initializes a new instance of EventSubresourceWebBundleInnerResponseErrorParams. </summary>
        /// <param name="innerRequestId"> Request identifier of the subresource request. </param>
        /// <param name="innerRequestURL"> URL of the subresource resource. </param>
        /// <param name="errorMessage"> Error message. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="innerRequestId"/>, <paramref name="innerRequestURL"/> or <paramref name="errorMessage"/> is null. </exception>
        public EventSubresourceWebBundleInnerResponseErrorParams(string innerRequestId, string innerRequestURL, string errorMessage)
        {
            Argument.AssertNotNull(innerRequestId, nameof(innerRequestId));
            Argument.AssertNotNull(innerRequestURL, nameof(innerRequestURL));
            Argument.AssertNotNull(errorMessage, nameof(errorMessage));

            InnerRequestId = innerRequestId;
            InnerRequestURL = innerRequestURL;
            ErrorMessage = errorMessage;
        }

        /// <summary> Initializes a new instance of EventSubresourceWebBundleInnerResponseErrorParams. </summary>
        /// <param name="innerRequestId"> Request identifier of the subresource request. </param>
        /// <param name="innerRequestURL"> URL of the subresource resource. </param>
        /// <param name="errorMessage"> Error message. </param>
        /// <param name="bundleRequestId">
        /// Bundle request identifier. Used to match this information to another event.
        /// This made be absent in case when the instrumentation was enabled only
        /// after webbundle was parsed.
        /// </param>
        internal EventSubresourceWebBundleInnerResponseErrorParams(string innerRequestId, string innerRequestURL, string errorMessage, string bundleRequestId)
        {
            InnerRequestId = innerRequestId;
            InnerRequestURL = innerRequestURL;
            ErrorMessage = errorMessage;
            BundleRequestId = bundleRequestId;
        }

        /// <summary> Request identifier of the subresource request. </summary>
        public string InnerRequestId { get; set; }
        /// <summary> URL of the subresource resource. </summary>
        public string InnerRequestURL { get; set; }
        /// <summary> Error message. </summary>
        public string ErrorMessage { get; set; }
        /// <summary>
        /// Bundle request identifier. Used to match this information to another event.
        /// This made be absent in case when the instrumentation was enabled only
        /// after webbundle was parsed.
        /// </summary>
        public string BundleRequestId { get; set; }
    }
}
