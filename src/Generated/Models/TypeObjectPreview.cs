// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Object containing abbreviated remote object value. </summary>
    public partial class TypeObjectPreview
    {
        /// <summary> Initializes a new instance of TypeObjectPreview. </summary>
        /// <param name="type"> Object type. </param>
        /// <param name="overflow"> True iff some of the properties or entries of the original object did not fit. </param>
        /// <param name="properties"> List of the properties. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="type"/> or <paramref name="properties"/> is null. </exception>
        public TypeObjectPreview(string type, bool overflow, IEnumerable<TypePropertyPreview> properties)
        {
            Argument.AssertNotNull(type, nameof(type));
            Argument.AssertNotNull(properties, nameof(properties));

            Type = type;
            Overflow = overflow;
            Properties = properties.ToList();
            Entries = new ChangeTrackingList<TypeEntryPreview>();
        }

        /// <summary> Initializes a new instance of TypeObjectPreview. </summary>
        /// <param name="type"> Object type. </param>
        /// <param name="subtype"> Object subtype hint. Specified for `object` type values only. </param>
        /// <param name="description"> String representation of the object. </param>
        /// <param name="overflow"> True iff some of the properties or entries of the original object did not fit. </param>
        /// <param name="properties"> List of the properties. </param>
        /// <param name="entries"> List of the entries. Specified for `map` and `set` subtype values only. </param>
        internal TypeObjectPreview(string type, string subtype, string description, bool overflow, IList<TypePropertyPreview> properties, IList<TypeEntryPreview> entries)
        {
            Type = type;
            Subtype = subtype;
            Description = description;
            Overflow = overflow;
            Properties = properties;
            Entries = entries;
        }

        /// <summary> Object type. </summary>
        public string Type { get; set; }
        /// <summary> Object subtype hint. Specified for `object` type values only. </summary>
        public string Subtype { get; set; }
        /// <summary> String representation of the object. </summary>
        public string Description { get; set; }
        /// <summary> True iff some of the properties or entries of the original object did not fit. </summary>
        public bool Overflow { get; set; }
        /// <summary> List of the properties. </summary>
        public IList<TypePropertyPreview> Properties { get; }
        /// <summary> List of the entries. Specified for `map` and `set` subtype values only. </summary>
        public IList<TypeEntryPreview> Entries { get; }
    }
}
