// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Fired when frame schedules a potential navigation. </summary>
    public partial class EventFrameScheduledNavigationParams
    {
        /// <summary> Initializes a new instance of EventFrameScheduledNavigationParams. </summary>
        /// <param name="frameId"> Id of the frame that has scheduled a navigation. </param>
        /// <param name="delay">
        /// Delay (in seconds) until the navigation is scheduled to begin. The navigation is not
        /// guaranteed to start.
        /// </param>
        /// <param name="reason"> The reason for the navigation. </param>
        /// <param name="url"> The destination URL for the scheduled navigation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="frameId"/>, <paramref name="reason"/> or <paramref name="url"/> is null. </exception>
        public EventFrameScheduledNavigationParams(string frameId, float delay, string reason, string url)
        {
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(reason, nameof(reason));
            Argument.AssertNotNull(url, nameof(url));

            FrameId = frameId;
            Delay = delay;
            Reason = reason;
            Url = url;
        }

        /// <summary> Id of the frame that has scheduled a navigation. </summary>
        public string FrameId { get; set; }
        /// <summary>
        /// Delay (in seconds) until the navigation is scheduled to begin. The navigation is not
        /// guaranteed to start.
        /// </summary>
        public float Delay { get; set; }
        /// <summary> The reason for the navigation. </summary>
        public string Reason { get; set; }
        /// <summary> The destination URL for the scheduled navigation. </summary>
        public string Url { get; set; }
    }
}
