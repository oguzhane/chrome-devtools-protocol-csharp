// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Protocol object for AudioParam. </summary>
    public partial class TypeAudioParam
    {
        /// <summary> Initializes a new instance of TypeAudioParam. </summary>
        /// <param name="paramId"> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </param>
        /// <param name="nodeId"> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </param>
        /// <param name="contextId"> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </param>
        /// <param name="paramType"> Enum of AudioParam types. </param>
        /// <param name="rate"> Enum of AudioParam::AutomationRate from the spec. </param>
        /// <param name="defaultValue"></param>
        /// <param name="minValue"></param>
        /// <param name="maxValue"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="paramId"/>, <paramref name="nodeId"/>, <paramref name="contextId"/>, <paramref name="paramType"/> or <paramref name="rate"/> is null. </exception>
        public TypeAudioParam(string paramId, string nodeId, string contextId, string paramType, string rate, float defaultValue, float minValue, float maxValue)
        {
            Argument.AssertNotNull(paramId, nameof(paramId));
            Argument.AssertNotNull(nodeId, nameof(nodeId));
            Argument.AssertNotNull(contextId, nameof(contextId));
            Argument.AssertNotNull(paramType, nameof(paramType));
            Argument.AssertNotNull(rate, nameof(rate));

            ParamId = paramId;
            NodeId = nodeId;
            ContextId = contextId;
            ParamType = paramType;
            Rate = rate;
            DefaultValue = defaultValue;
            MinValue = minValue;
            MaxValue = maxValue;
        }

        /// <summary> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </summary>
        public string ParamId { get; set; }
        /// <summary> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </summary>
        public string NodeId { get; set; }
        /// <summary> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </summary>
        public string ContextId { get; set; }
        /// <summary> Enum of AudioParam types. </summary>
        public string ParamType { get; set; }
        /// <summary> Enum of AudioParam::AutomationRate from the spec. </summary>
        public string Rate { get; set; }
        /// <summary> Gets or sets the default value. </summary>
        public float DefaultValue { get; set; }
        /// <summary> Gets or sets the min value. </summary>
        public float MinValue { get; set; }
        /// <summary> Gets or sets the max value. </summary>
        public float MaxValue { get; set; }
    }
}
