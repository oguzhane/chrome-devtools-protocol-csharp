// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Fired for top level page lifecycle events such as navigation, load, paint, etc. </summary>
    public partial class EventLifecycleEventParams
    {
        /// <summary> Initializes a new instance of EventLifecycleEventParams. </summary>
        /// <param name="frameId"> Id of the frame. </param>
        /// <param name="loaderId"> Loader identifier. Empty string if the request is fetched from worker. </param>
        /// <param name="name"></param>
        /// <param name="timestamp"> Monotonically increasing time in seconds since an arbitrary point in the past. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="frameId"/>, <paramref name="loaderId"/> or <paramref name="name"/> is null. </exception>
        public EventLifecycleEventParams(string frameId, string loaderId, string name, float timestamp)
        {
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(loaderId, nameof(loaderId));
            Argument.AssertNotNull(name, nameof(name));

            FrameId = frameId;
            LoaderId = loaderId;
            Name = name;
            Timestamp = timestamp;
        }

        /// <summary> Id of the frame. </summary>
        public string FrameId { get; set; }
        /// <summary> Loader identifier. Empty string if the request is fetched from worker. </summary>
        public string LoaderId { get; set; }
        /// <summary> Gets or sets the name. </summary>
        public string Name { get; set; }
        /// <summary> Monotonically increasing time in seconds since an arbitrary point in the past. </summary>
        public float Timestamp { get; set; }
    }
}
