// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// This information is currently necessary, as the front-end has a difficult
    /// time finding a specific cookie. With this, we can convey specific error
    /// information without the cookie.
    /// </summary>
    public partial class TypeCookieIssueDetails
    {
        /// <summary> Initializes a new instance of TypeCookieIssueDetails. </summary>
        /// <param name="cookieWarningReasons"></param>
        /// <param name="cookieExclusionReasons"></param>
        /// <param name="operation">
        /// Optionally identifies the site-for-cookies and the cookie url, which
        /// may be used by the front-end as additional context.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="cookieWarningReasons"/>, <paramref name="cookieExclusionReasons"/> or <paramref name="operation"/> is null. </exception>
        public TypeCookieIssueDetails(IEnumerable<string> cookieWarningReasons, IEnumerable<string> cookieExclusionReasons, string operation)
        {
            Argument.AssertNotNull(cookieWarningReasons, nameof(cookieWarningReasons));
            Argument.AssertNotNull(cookieExclusionReasons, nameof(cookieExclusionReasons));
            Argument.AssertNotNull(operation, nameof(operation));

            CookieWarningReasons = cookieWarningReasons.ToList();
            CookieExclusionReasons = cookieExclusionReasons.ToList();
            Operation = operation;
        }

        /// <summary> Initializes a new instance of TypeCookieIssueDetails. </summary>
        /// <param name="cookie">
        /// If AffectedCookie is not set then rawCookieLine contains the raw
        /// Set-Cookie header string. This hints at a problem where the
        /// cookie line is syntactically or semantically malformed in a way
        /// that no valid cookie could be created.
        /// </param>
        /// <param name="rawCookieLine"></param>
        /// <param name="cookieWarningReasons"></param>
        /// <param name="cookieExclusionReasons"></param>
        /// <param name="operation">
        /// Optionally identifies the site-for-cookies and the cookie url, which
        /// may be used by the front-end as additional context.
        /// </param>
        /// <param name="siteForCookies"></param>
        /// <param name="cookieUrl"></param>
        /// <param name="request"> Information about a request that is affected by an inspector issue. </param>
        internal TypeCookieIssueDetails(TypeAffectedCookie cookie, string rawCookieLine, IList<string> cookieWarningReasons, IList<string> cookieExclusionReasons, string operation, string siteForCookies, string cookieUrl, TypeAffectedRequest request)
        {
            Cookie = cookie;
            RawCookieLine = rawCookieLine;
            CookieWarningReasons = cookieWarningReasons;
            CookieExclusionReasons = cookieExclusionReasons;
            Operation = operation;
            SiteForCookies = siteForCookies;
            CookieUrl = cookieUrl;
            Request = request;
        }

        /// <summary>
        /// If AffectedCookie is not set then rawCookieLine contains the raw
        /// Set-Cookie header string. This hints at a problem where the
        /// cookie line is syntactically or semantically malformed in a way
        /// that no valid cookie could be created.
        /// </summary>
        public TypeAffectedCookie Cookie { get; set; }
        /// <summary> Gets or sets the raw cookie line. </summary>
        public string RawCookieLine { get; set; }
        /// <summary> Gets the cookie warning reasons. </summary>
        public IList<string> CookieWarningReasons { get; }
        /// <summary> Gets the cookie exclusion reasons. </summary>
        public IList<string> CookieExclusionReasons { get; }
        /// <summary>
        /// Optionally identifies the site-for-cookies and the cookie url, which
        /// may be used by the front-end as additional context.
        /// </summary>
        public string Operation { get; set; }
        /// <summary> Gets or sets the site for cookies. </summary>
        public string SiteForCookies { get; set; }
        /// <summary> Gets or sets the cookie url. </summary>
        public string CookieUrl { get; set; }
        /// <summary> Information about a request that is affected by an inspector issue. </summary>
        public TypeAffectedRequest Request { get; set; }
    }
}
