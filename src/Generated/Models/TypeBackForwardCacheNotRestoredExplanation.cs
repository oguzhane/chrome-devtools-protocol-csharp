// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> The TypeBackForwardCacheNotRestoredExplanation. </summary>
    public partial class TypeBackForwardCacheNotRestoredExplanation
    {
        /// <summary> Initializes a new instance of TypeBackForwardCacheNotRestoredExplanation. </summary>
        /// <param name="type"> Type of the reason. </param>
        /// <param name="reason"> Not restored reason. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="type"/> or <paramref name="reason"/> is null. </exception>
        public TypeBackForwardCacheNotRestoredExplanation(string type, string reason)
        {
            Argument.AssertNotNull(type, nameof(type));
            Argument.AssertNotNull(reason, nameof(reason));

            Type = type;
            Reason = reason;
        }

        /// <summary> Initializes a new instance of TypeBackForwardCacheNotRestoredExplanation. </summary>
        /// <param name="type"> Type of the reason. </param>
        /// <param name="reason"> Not restored reason. </param>
        /// <param name="context">
        /// Context associated with the reason. The meaning of this context is
        /// dependent on the reason:
        /// - EmbedderExtensionSentMessageToCachedFrame: the extension ID.
        /// </param>
        internal TypeBackForwardCacheNotRestoredExplanation(string type, string reason, string context)
        {
            Type = type;
            Reason = reason;
            Context = context;
        }

        /// <summary> Type of the reason. </summary>
        public string Type { get; set; }
        /// <summary> Not restored reason. </summary>
        public string Reason { get; set; }
        /// <summary>
        /// Context associated with the reason. The meaning of this context is
        /// dependent on the reason:
        /// - EmbedderExtensionSentMessageToCachedFrame: the extension ID.
        /// </summary>
        public string Context { get; set; }
    }
}
