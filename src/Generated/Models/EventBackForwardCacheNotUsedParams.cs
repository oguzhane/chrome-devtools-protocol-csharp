// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Fired for failed bfcache history navigations if BackForwardCache feature is enabled. Do
    /// not assume any ordering with the Page.frameNavigated event. This event is fired only for
    /// main-frame history navigation where the document changes (non-same-document navigations),
    /// when bfcache navigation fails.
    /// </summary>
    public partial class EventBackForwardCacheNotUsedParams
    {
        /// <summary> Initializes a new instance of EventBackForwardCacheNotUsedParams. </summary>
        /// <param name="loaderId"> The loader id for the associated navgation. </param>
        /// <param name="frameId"> The frame id of the associated frame. </param>
        /// <param name="notRestoredExplanations"> Array of reasons why the page could not be cached. This must not be empty. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="loaderId"/>, <paramref name="frameId"/> or <paramref name="notRestoredExplanations"/> is null. </exception>
        public EventBackForwardCacheNotUsedParams(string loaderId, string frameId, IEnumerable<TypeBackForwardCacheNotRestoredExplanation> notRestoredExplanations)
        {
            Argument.AssertNotNull(loaderId, nameof(loaderId));
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(notRestoredExplanations, nameof(notRestoredExplanations));

            LoaderId = loaderId;
            FrameId = frameId;
            NotRestoredExplanations = notRestoredExplanations.ToList();
        }

        /// <summary> Initializes a new instance of EventBackForwardCacheNotUsedParams. </summary>
        /// <param name="loaderId"> The loader id for the associated navgation. </param>
        /// <param name="frameId"> The frame id of the associated frame. </param>
        /// <param name="notRestoredExplanations"> Array of reasons why the page could not be cached. This must not be empty. </param>
        /// <param name="notRestoredExplanationsTree"> Tree structure of reasons why the page could not be cached for each frame. </param>
        internal EventBackForwardCacheNotUsedParams(string loaderId, string frameId, IList<TypeBackForwardCacheNotRestoredExplanation> notRestoredExplanations, TypeBackForwardCacheNotRestoredExplanationTree notRestoredExplanationsTree)
        {
            LoaderId = loaderId;
            FrameId = frameId;
            NotRestoredExplanations = notRestoredExplanations;
            NotRestoredExplanationsTree = notRestoredExplanationsTree;
        }

        /// <summary> The loader id for the associated navgation. </summary>
        public string LoaderId { get; set; }
        /// <summary> The frame id of the associated frame. </summary>
        public string FrameId { get; set; }
        /// <summary> Array of reasons why the page could not be cached. This must not be empty. </summary>
        public IList<TypeBackForwardCacheNotRestoredExplanation> NotRestoredExplanations { get; }
        /// <summary> Tree structure of reasons why the page could not be cached for each frame. </summary>
        public TypeBackForwardCacheNotRestoredExplanationTree NotRestoredExplanationsTree { get; set; }
    }
}
