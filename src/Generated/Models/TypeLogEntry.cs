// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Log entry. </summary>
    public partial class TypeLogEntry
    {
        /// <summary> Initializes a new instance of TypeLogEntry. </summary>
        /// <param name="source"> Log entry source. </param>
        /// <param name="level"> Log entry severity. </param>
        /// <param name="text"> Logged text. </param>
        /// <param name="timestamp"> Timestamp when this entry was added. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/>, <paramref name="level"/> or <paramref name="text"/> is null. </exception>
        public TypeLogEntry(string source, string level, string text, float timestamp)
        {
            Argument.AssertNotNull(source, nameof(source));
            Argument.AssertNotNull(level, nameof(level));
            Argument.AssertNotNull(text, nameof(text));

            Source = source;
            Level = level;
            Text = text;
            Timestamp = timestamp;
            Args = new ChangeTrackingList<TypeRemoteObject>();
        }

        /// <summary> Initializes a new instance of TypeLogEntry. </summary>
        /// <param name="source"> Log entry source. </param>
        /// <param name="level"> Log entry severity. </param>
        /// <param name="text"> Logged text. </param>
        /// <param name="category"></param>
        /// <param name="timestamp"> Timestamp when this entry was added. </param>
        /// <param name="url"> URL of the resource if known. </param>
        /// <param name="lineNumber"> Line number in the resource. </param>
        /// <param name="stackTrace"> JavaScript stack trace. </param>
        /// <param name="networkRequestId"> Identifier of the network request associated with this entry. </param>
        /// <param name="workerId"> Identifier of the worker associated with this entry. </param>
        /// <param name="args"> Call arguments. </param>
        internal TypeLogEntry(string source, string level, string text, string category, float timestamp, string url, int? lineNumber, TypeStackTrace stackTrace, string networkRequestId, string workerId, IList<TypeRemoteObject> args)
        {
            Source = source;
            Level = level;
            Text = text;
            Category = category;
            Timestamp = timestamp;
            Url = url;
            LineNumber = lineNumber;
            StackTrace = stackTrace;
            NetworkRequestId = networkRequestId;
            WorkerId = workerId;
            Args = args;
        }

        /// <summary> Log entry source. </summary>
        public string Source { get; set; }
        /// <summary> Log entry severity. </summary>
        public string Level { get; set; }
        /// <summary> Logged text. </summary>
        public string Text { get; set; }
        /// <summary> Gets or sets the category. </summary>
        public string Category { get; set; }
        /// <summary> Timestamp when this entry was added. </summary>
        public float Timestamp { get; set; }
        /// <summary> URL of the resource if known. </summary>
        public string Url { get; set; }
        /// <summary> Line number in the resource. </summary>
        public int? LineNumber { get; set; }
        /// <summary> JavaScript stack trace. </summary>
        public TypeStackTrace StackTrace { get; set; }
        /// <summary> Identifier of the network request associated with this entry. </summary>
        public string NetworkRequestId { get; set; }
        /// <summary> Identifier of the worker associated with this entry. </summary>
        public string WorkerId { get; set; }
        /// <summary> Call arguments. </summary>
        public IList<TypeRemoteObject> Args { get; }
    }
}
