// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    [JsonConverter(typeof(TypeStickyPositionConstraintConverter))]
    public partial class TypeStickyPositionConstraint : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("stickyBoxRect"u8);
            writer.WriteObjectValue(StickyBoxRect);
            writer.WritePropertyName("containingBlockRect"u8);
            writer.WriteObjectValue(ContainingBlockRect);
            if (Optional.IsDefined(NearestLayerShiftingStickyBox))
            {
                writer.WritePropertyName("nearestLayerShiftingStickyBox"u8);
                writer.WriteStringValue(NearestLayerShiftingStickyBox);
            }
            if (Optional.IsDefined(NearestLayerShiftingContainingBlock))
            {
                writer.WritePropertyName("nearestLayerShiftingContainingBlock"u8);
                writer.WriteStringValue(NearestLayerShiftingContainingBlock);
            }
            writer.WriteEndObject();
        }

        internal static TypeStickyPositionConstraint DeserializeTypeStickyPositionConstraint(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            TypeRect stickyBoxRect = default;
            TypeRect containingBlockRect = default;
            Optional<string> nearestLayerShiftingStickyBox = default;
            Optional<string> nearestLayerShiftingContainingBlock = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("stickyBoxRect"u8))
                {
                    stickyBoxRect = TypeRect.DeserializeTypeRect(property.Value);
                    continue;
                }
                if (property.NameEquals("containingBlockRect"u8))
                {
                    containingBlockRect = TypeRect.DeserializeTypeRect(property.Value);
                    continue;
                }
                if (property.NameEquals("nearestLayerShiftingStickyBox"u8))
                {
                    nearestLayerShiftingStickyBox = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nearestLayerShiftingContainingBlock"u8))
                {
                    nearestLayerShiftingContainingBlock = property.Value.GetString();
                    continue;
                }
            }
            return new TypeStickyPositionConstraint(stickyBoxRect, containingBlockRect, nearestLayerShiftingStickyBox.Value, nearestLayerShiftingContainingBlock.Value);
        }

        internal partial class TypeStickyPositionConstraintConverter : JsonConverter<TypeStickyPositionConstraint>
        {
            public override void Write(Utf8JsonWriter writer, TypeStickyPositionConstraint model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override TypeStickyPositionConstraint Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeTypeStickyPositionConstraint(document.RootElement);
            }
        }
    }
}
