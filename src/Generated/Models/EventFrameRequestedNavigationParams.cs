// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Fired when a renderer-initiated navigation is requested.
    /// Navigation may still be cancelled after the event is issued.
    /// </summary>
    public partial class EventFrameRequestedNavigationParams
    {
        /// <summary> Initializes a new instance of EventFrameRequestedNavigationParams. </summary>
        /// <param name="frameId"> Id of the frame that is being navigated. </param>
        /// <param name="reason"> The reason for the navigation. </param>
        /// <param name="url"> The destination URL for the requested navigation. </param>
        /// <param name="disposition"> The disposition for the navigation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="frameId"/>, <paramref name="reason"/>, <paramref name="url"/> or <paramref name="disposition"/> is null. </exception>
        public EventFrameRequestedNavigationParams(string frameId, string reason, string url, string disposition)
        {
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(reason, nameof(reason));
            Argument.AssertNotNull(url, nameof(url));
            Argument.AssertNotNull(disposition, nameof(disposition));

            FrameId = frameId;
            Reason = reason;
            Url = url;
            Disposition = disposition;
        }

        /// <summary> Id of the frame that is being navigated. </summary>
        public string FrameId { get; set; }
        /// <summary> The reason for the navigation. </summary>
        public string Reason { get; set; }
        /// <summary> The destination URL for the requested navigation. </summary>
        public string Url { get; set; }
        /// <summary> The disposition for the navigation. </summary>
        public string Disposition { get; set; }
    }
}
