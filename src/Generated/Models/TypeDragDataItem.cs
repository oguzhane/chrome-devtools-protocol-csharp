// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> The TypeDragDataItem. </summary>
    public partial class TypeDragDataItem
    {
        /// <summary> Initializes a new instance of TypeDragDataItem. </summary>
        /// <param name="mimeType"> Mime type of the dragged data. </param>
        /// <param name="data">
        /// Depending of the value of `mimeType`, it contains the dragged link,
        /// text, HTML markup or any other data.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="mimeType"/> or <paramref name="data"/> is null. </exception>
        public TypeDragDataItem(string mimeType, string data)
        {
            Argument.AssertNotNull(mimeType, nameof(mimeType));
            Argument.AssertNotNull(data, nameof(data));

            MimeType = mimeType;
            Data = data;
        }

        /// <summary> Initializes a new instance of TypeDragDataItem. </summary>
        /// <param name="mimeType"> Mime type of the dragged data. </param>
        /// <param name="data">
        /// Depending of the value of `mimeType`, it contains the dragged link,
        /// text, HTML markup or any other data.
        /// </param>
        /// <param name="title"> Title associated with a link. Only valid when `mimeType` == &quot;text/uri-list&quot;. </param>
        /// <param name="baseURL">
        /// Stores the base URL for the contained markup. Only valid when `mimeType`
        /// == &quot;text/html&quot;.
        /// </param>
        internal TypeDragDataItem(string mimeType, string data, string title, string baseURL)
        {
            MimeType = mimeType;
            Data = data;
            Title = title;
            BaseURL = baseURL;
        }

        /// <summary> Mime type of the dragged data. </summary>
        public string MimeType { get; set; }
        /// <summary>
        /// Depending of the value of `mimeType`, it contains the dragged link,
        /// text, HTML markup or any other data.
        /// </summary>
        public string Data { get; set; }
        /// <summary> Title associated with a link. Only valid when `mimeType` == &quot;text/uri-list&quot;. </summary>
        public string Title { get; set; }
        /// <summary>
        /// Stores the base URL for the contained markup. Only valid when `mimeType`
        /// == &quot;text/html&quot;.
        /// </summary>
        public string BaseURL { get; set; }
    }
}
