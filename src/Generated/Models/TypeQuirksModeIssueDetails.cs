// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Details for issues about documents in Quirks Mode
    /// or Limited Quirks Mode that affects page layouting.
    /// </summary>
    public partial class TypeQuirksModeIssueDetails
    {
        /// <summary> Initializes a new instance of TypeQuirksModeIssueDetails. </summary>
        /// <param name="isLimitedQuirksMode">
        /// If false, it means the document&apos;s mode is &quot;quirks&quot;
        /// instead of &quot;limited-quirks&quot;.
        /// </param>
        /// <param name="documentNodeId">
        /// Unique DOM node identifier used to reference a node that may not have been pushed to the
        /// front-end.
        /// </param>
        /// <param name="url"></param>
        /// <param name="frameId"> Unique frame identifier. </param>
        /// <param name="loaderId"> Unique loader identifier. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="url"/>, <paramref name="frameId"/> or <paramref name="loaderId"/> is null. </exception>
        public TypeQuirksModeIssueDetails(bool isLimitedQuirksMode, int documentNodeId, string url, string frameId, string loaderId)
        {
            Argument.AssertNotNull(url, nameof(url));
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(loaderId, nameof(loaderId));

            IsLimitedQuirksMode = isLimitedQuirksMode;
            DocumentNodeId = documentNodeId;
            Url = url;
            FrameId = frameId;
            LoaderId = loaderId;
        }

        /// <summary>
        /// If false, it means the document&apos;s mode is &quot;quirks&quot;
        /// instead of &quot;limited-quirks&quot;.
        /// </summary>
        public bool IsLimitedQuirksMode { get; set; }
        /// <summary>
        /// Unique DOM node identifier used to reference a node that may not have been pushed to the
        /// front-end.
        /// </summary>
        public int DocumentNodeId { get; set; }
        /// <summary> Gets or sets the url. </summary>
        public string Url { get; set; }
        /// <summary> Unique frame identifier. </summary>
        public string FrameId { get; set; }
        /// <summary> Unique loader identifier. </summary>
        public string LoaderId { get; set; }
    }
}
