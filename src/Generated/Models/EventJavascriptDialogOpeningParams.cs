// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Fired when a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload) is about to
    /// open.
    /// </summary>
    public partial class EventJavascriptDialogOpeningParams
    {
        /// <summary> Initializes a new instance of EventJavascriptDialogOpeningParams. </summary>
        /// <param name="url"> Frame url. </param>
        /// <param name="message"> Message that will be displayed by the dialog. </param>
        /// <param name="type"> Dialog type. </param>
        /// <param name="hasBrowserHandler">
        /// True iff browser is capable showing or acting on the given dialog. When browser has no
        /// dialog handler for given target, calling alert while Page domain is engaged will stall
        /// the page execution. Execution can be resumed via calling Page.handleJavaScriptDialog.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="url"/>, <paramref name="message"/> or <paramref name="type"/> is null. </exception>
        public EventJavascriptDialogOpeningParams(string url, string message, string type, bool hasBrowserHandler)
        {
            Argument.AssertNotNull(url, nameof(url));
            Argument.AssertNotNull(message, nameof(message));
            Argument.AssertNotNull(type, nameof(type));

            Url = url;
            Message = message;
            Type = type;
            HasBrowserHandler = hasBrowserHandler;
        }

        /// <summary> Initializes a new instance of EventJavascriptDialogOpeningParams. </summary>
        /// <param name="url"> Frame url. </param>
        /// <param name="message"> Message that will be displayed by the dialog. </param>
        /// <param name="type"> Dialog type. </param>
        /// <param name="hasBrowserHandler">
        /// True iff browser is capable showing or acting on the given dialog. When browser has no
        /// dialog handler for given target, calling alert while Page domain is engaged will stall
        /// the page execution. Execution can be resumed via calling Page.handleJavaScriptDialog.
        /// </param>
        /// <param name="defaultPrompt"> Default dialog prompt. </param>
        internal EventJavascriptDialogOpeningParams(string url, string message, string type, bool hasBrowserHandler, string defaultPrompt)
        {
            Url = url;
            Message = message;
            Type = type;
            HasBrowserHandler = hasBrowserHandler;
            DefaultPrompt = defaultPrompt;
        }

        /// <summary> Frame url. </summary>
        public string Url { get; set; }
        /// <summary> Message that will be displayed by the dialog. </summary>
        public string Message { get; set; }
        /// <summary> Dialog type. </summary>
        public string Type { get; set; }
        /// <summary>
        /// True iff browser is capable showing or acting on the given dialog. When browser has no
        /// dialog handler for given target, calling alert while Page domain is engaged will stall
        /// the page execution. Execution can be resumed via calling Page.handleJavaScriptDialog.
        /// </summary>
        public bool HasBrowserHandler { get; set; }
        /// <summary> Default dialog prompt. </summary>
        public string DefaultPrompt { get; set; }
    }
}
