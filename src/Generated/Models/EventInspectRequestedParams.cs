// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Issued when object should be inspected (for example, as a result of inspect() command line API
    /// call).
    /// </summary>
    public partial class EventInspectRequestedParams
    {
        /// <summary> Initializes a new instance of EventInspectRequestedParams. </summary>
        /// <param name="object"> Mirror object referencing original JavaScript object. </param>
        /// <param name="hints"> Any object. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="object"/> or <paramref name="hints"/> is null. </exception>
        public EventInspectRequestedParams(TypeRemoteObject @object, object hints)
        {
            Argument.AssertNotNull(@object, nameof(@object));
            Argument.AssertNotNull(hints, nameof(hints));

            Object = @object;
            Hints = hints;
        }

        /// <summary> Initializes a new instance of EventInspectRequestedParams. </summary>
        /// <param name="object"> Mirror object referencing original JavaScript object. </param>
        /// <param name="hints"> Any object. </param>
        /// <param name="executionContextId"> Identifier of the context where the call was made. </param>
        internal EventInspectRequestedParams(TypeRemoteObject @object, object hints, int? executionContextId)
        {
            Object = @object;
            Hints = hints;
            ExecutionContextId = executionContextId;
        }

        /// <summary> Mirror object referencing original JavaScript object. </summary>
        public TypeRemoteObject Object { get; set; }
        /// <summary> Any object. </summary>
        public object Hints { get; set; }
        /// <summary> Identifier of the context where the call was made. </summary>
        public int? ExecutionContextId { get; set; }
    }
}
