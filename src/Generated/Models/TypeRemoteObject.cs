// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Mirror object referencing original JavaScript object. </summary>
    public partial class TypeRemoteObject
    {
        /// <summary> Initializes a new instance of TypeRemoteObject. </summary>
        /// <param name="type"> Object type. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="type"/> is null. </exception>
        public TypeRemoteObject(string type)
        {
            Argument.AssertNotNull(type, nameof(type));

            Type = type;
        }

        /// <summary> Initializes a new instance of TypeRemoteObject. </summary>
        /// <param name="type"> Object type. </param>
        /// <param name="subtype">
        /// Object subtype hint. Specified for `object` type values only.
        /// NOTE: If you change anything here, make sure to also update
        /// `subtype` in `ObjectPreview` and `PropertyPreview` below.
        /// </param>
        /// <param name="className"> Object class (constructor) name. Specified for `object` type values only. </param>
        /// <param name="value"> Remote object value in case of primitive values or JSON values (if it was requested). </param>
        /// <param name="unserializableValue">
        /// Primitive value which can not be JSON-stringified does not have `value`, but gets this
        /// property.
        /// </param>
        /// <param name="description"> String representation of the object. </param>
        /// <param name="webDriverValue"> WebDriver BiDi representation of the value. </param>
        /// <param name="objectId"> Unique object identifier (for non-primitive values). </param>
        /// <param name="preview"> Preview containing abbreviated property values. Specified for `object` type values only. </param>
        /// <param name="customPreview"></param>
        internal TypeRemoteObject(string type, string subtype, string className, object value, string unserializableValue, string description, TypeWebDriverValue webDriverValue, string objectId, TypeObjectPreview preview, TypeCustomPreview customPreview)
        {
            Type = type;
            Subtype = subtype;
            ClassName = className;
            Value = value;
            UnserializableValue = unserializableValue;
            Description = description;
            WebDriverValue = webDriverValue;
            ObjectId = objectId;
            Preview = preview;
            CustomPreview = customPreview;
        }

        /// <summary> Object type. </summary>
        public string Type { get; set; }
        /// <summary>
        /// Object subtype hint. Specified for `object` type values only.
        /// NOTE: If you change anything here, make sure to also update
        /// `subtype` in `ObjectPreview` and `PropertyPreview` below.
        /// </summary>
        public string Subtype { get; set; }
        /// <summary> Object class (constructor) name. Specified for `object` type values only. </summary>
        public string ClassName { get; set; }
        /// <summary> Remote object value in case of primitive values or JSON values (if it was requested). </summary>
        public object Value { get; set; }
        /// <summary>
        /// Primitive value which can not be JSON-stringified does not have `value`, but gets this
        /// property.
        /// </summary>
        public string UnserializableValue { get; set; }
        /// <summary> String representation of the object. </summary>
        public string Description { get; set; }
        /// <summary> WebDriver BiDi representation of the value. </summary>
        public TypeWebDriverValue WebDriverValue { get; set; }
        /// <summary> Unique object identifier (for non-primitive values). </summary>
        public string ObjectId { get; set; }
        /// <summary> Preview containing abbreviated property values. Specified for `object` type values only. </summary>
        public TypeObjectPreview Preview { get; set; }
        /// <summary> Gets or sets the custom preview. </summary>
        public TypeCustomPreview CustomPreview { get; set; }
    }
}
