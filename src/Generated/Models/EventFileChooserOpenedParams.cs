// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Emitted only when `page.interceptFileChooser` is enabled. </summary>
    public partial class EventFileChooserOpenedParams
    {
        /// <summary> Initializes a new instance of EventFileChooserOpenedParams. </summary>
        /// <param name="frameId"> Id of the frame containing input node. </param>
        /// <param name="mode"> Input mode. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="frameId"/> or <paramref name="mode"/> is null. </exception>
        public EventFileChooserOpenedParams(string frameId, string mode)
        {
            Argument.AssertNotNull(frameId, nameof(frameId));
            Argument.AssertNotNull(mode, nameof(mode));

            FrameId = frameId;
            Mode = mode;
        }

        /// <summary> Initializes a new instance of EventFileChooserOpenedParams. </summary>
        /// <param name="frameId"> Id of the frame containing input node. </param>
        /// <param name="mode"> Input mode. </param>
        /// <param name="backendNodeId"> Input node id. Only present for file choosers opened via an &lt;input type=&quot;file&quot;&gt; element. </param>
        internal EventFileChooserOpenedParams(string frameId, string mode, int? backendNodeId)
        {
            FrameId = frameId;
            Mode = mode;
            BackendNodeId = backendNodeId;
        }

        /// <summary> Id of the frame containing input node. </summary>
        public string FrameId { get; set; }
        /// <summary> Input mode. </summary>
        public string Mode { get; set; }
        /// <summary> Input node id. Only present for file choosers opened via an &lt;input type=&quot;file&quot;&gt; element. </summary>
        public int? BackendNodeId { get; set; }
    }
}
