// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> A single source for a computed AX property. </summary>
    public partial class TypeAxValueSource
    {
        /// <summary> Initializes a new instance of TypeAxValueSource. </summary>
        /// <param name="type"> What type of source this is. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="type"/> is null. </exception>
        public TypeAxValueSource(string type)
        {
            Argument.AssertNotNull(type, nameof(type));

            Type = type;
        }

        /// <summary> Initializes a new instance of TypeAxValueSource. </summary>
        /// <param name="type"> What type of source this is. </param>
        /// <param name="value"> The value of this property source. </param>
        /// <param name="attribute"> The name of the relevant attribute, if any. </param>
        /// <param name="attributeValue"> The value of the relevant attribute, if any. </param>
        /// <param name="superseded"> Whether this source is superseded by a higher priority source. </param>
        /// <param name="nativeSource"> The native markup source for this value, e.g. a &lt;label&gt; element. </param>
        /// <param name="nativeSourceValue"> The value, such as a node or node list, of the native source. </param>
        /// <param name="invalid"> Whether the value for this property is invalid. </param>
        /// <param name="invalidReason"> Reason for the value being invalid, if it is. </param>
        internal TypeAxValueSource(string type, TypeAxValue value, string attribute, TypeAxValue attributeValue, bool? superseded, string nativeSource, TypeAxValue nativeSourceValue, bool? invalid, string invalidReason)
        {
            Type = type;
            Value = value;
            Attribute = attribute;
            AttributeValue = attributeValue;
            Superseded = superseded;
            NativeSource = nativeSource;
            NativeSourceValue = nativeSourceValue;
            Invalid = invalid;
            InvalidReason = invalidReason;
        }

        /// <summary> What type of source this is. </summary>
        public string Type { get; set; }
        /// <summary> The value of this property source. </summary>
        public TypeAxValue Value { get; set; }
        /// <summary> The name of the relevant attribute, if any. </summary>
        public string Attribute { get; set; }
        /// <summary> The value of the relevant attribute, if any. </summary>
        public TypeAxValue AttributeValue { get; set; }
        /// <summary> Whether this source is superseded by a higher priority source. </summary>
        public bool? Superseded { get; set; }
        /// <summary> The native markup source for this value, e.g. a &lt;label&gt; element. </summary>
        public string NativeSource { get; set; }
        /// <summary> The value, such as a node or node list, of the native source. </summary>
        public TypeAxValue NativeSourceValue { get; set; }
        /// <summary> Whether the value for this property is invalid. </summary>
        public bool? Invalid { get; set; }
        /// <summary> Reason for the value being invalid, if it is. </summary>
        public string InvalidReason { get; set; }
    }
}
