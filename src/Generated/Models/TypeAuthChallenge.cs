// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Authorization challenge for HTTP status code 401 or 407. </summary>
    public partial class TypeAuthChallenge
    {
        /// <summary> Initializes a new instance of TypeAuthChallenge. </summary>
        /// <param name="origin"> Origin of the challenger. </param>
        /// <param name="scheme"> The authentication scheme used, such as basic or digest. </param>
        /// <param name="realm"> The realm of the challenge. May be empty. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="origin"/>, <paramref name="scheme"/> or <paramref name="realm"/> is null. </exception>
        public TypeAuthChallenge(string origin, string scheme, string realm)
        {
            Argument.AssertNotNull(origin, nameof(origin));
            Argument.AssertNotNull(scheme, nameof(scheme));
            Argument.AssertNotNull(realm, nameof(realm));

            Origin = origin;
            Scheme = scheme;
            Realm = realm;
        }

        /// <summary> Initializes a new instance of TypeAuthChallenge. </summary>
        /// <param name="source"> Source of the authentication challenge. </param>
        /// <param name="origin"> Origin of the challenger. </param>
        /// <param name="scheme"> The authentication scheme used, such as basic or digest. </param>
        /// <param name="realm"> The realm of the challenge. May be empty. </param>
        internal TypeAuthChallenge(string source, string origin, string scheme, string realm)
        {
            Source = source;
            Origin = origin;
            Scheme = scheme;
            Realm = realm;
        }

        /// <summary> Source of the authentication challenge. </summary>
        public string Source { get; set; }
        /// <summary> Origin of the challenger. </summary>
        public string Origin { get; set; }
        /// <summary> The authentication scheme used, such as basic or digest. </summary>
        public string Scheme { get; set; }
        /// <summary> The realm of the challenge. May be empty. </summary>
        public string Realm { get; set; }
    }
}
