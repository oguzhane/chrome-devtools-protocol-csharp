// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    [JsonConverter(typeof(TypePositionTickInfoConverter))]
    public partial class TypePositionTickInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("line"u8);
            writer.WriteNumberValue(Line);
            writer.WritePropertyName("ticks"u8);
            writer.WriteNumberValue(Ticks);
            writer.WriteEndObject();
        }

        internal static TypePositionTickInfo DeserializeTypePositionTickInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            int line = default;
            int ticks = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("line"u8))
                {
                    line = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("ticks"u8))
                {
                    ticks = property.Value.GetInt32();
                    continue;
                }
            }
            return new TypePositionTickInfo(line, ticks);
        }

        internal partial class TypePositionTickInfoConverter : JsonConverter<TypePositionTickInfo>
        {
            public override void Write(Utf8JsonWriter writer, TypePositionTickInfo model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override TypePositionTickInfo Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeTypePositionTickInfo(document.RootElement);
            }
        }
    }
}
