// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Notifies about a new protocol message received from the session (as reported in
    /// `attachedToTarget` event).
    /// </summary>
    public partial class EventReceivedMessageFromTargetParams
    {
        /// <summary> Initializes a new instance of EventReceivedMessageFromTargetParams. </summary>
        /// <param name="sessionId"> Identifier of a session which sends a message. </param>
        /// <param name="message"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="sessionId"/> or <paramref name="message"/> is null. </exception>
        public EventReceivedMessageFromTargetParams(string sessionId, string message)
        {
            Argument.AssertNotNull(sessionId, nameof(sessionId));
            Argument.AssertNotNull(message, nameof(message));

            SessionId = sessionId;
            Message = message;
        }

        /// <summary> Initializes a new instance of EventReceivedMessageFromTargetParams. </summary>
        /// <param name="sessionId"> Identifier of a session which sends a message. </param>
        /// <param name="message"></param>
        /// <param name="targetId"> Deprecated. </param>
        internal EventReceivedMessageFromTargetParams(string sessionId, string message, string targetId)
        {
            SessionId = sessionId;
            Message = message;
            TargetId = targetId;
        }

        /// <summary> Identifier of a session which sends a message. </summary>
        public string SessionId { get; set; }
        /// <summary> Gets or sets the message. </summary>
        public string Message { get; set; }
        /// <summary> Deprecated. </summary>
        public string TargetId { get; set; }
    }
}
