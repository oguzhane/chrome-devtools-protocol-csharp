// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// There is a certificate error. If overriding certificate errors is enabled, then it should be
    /// handled with the `handleCertificateError` command. Note: this event does not fire if the
    /// certificate error has been allowed internally. Only one client per target should override
    /// certificate errors at the same time.
    /// </summary>
    public partial class EventCertificateErrorParams
    {
        /// <summary> Initializes a new instance of EventCertificateErrorParams. </summary>
        /// <param name="eventId"> The ID of the event. </param>
        /// <param name="errorType"> The type of the error. </param>
        /// <param name="requestURL"> The url that was requested. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="errorType"/> or <paramref name="requestURL"/> is null. </exception>
        public EventCertificateErrorParams(int eventId, string errorType, string requestURL)
        {
            Argument.AssertNotNull(errorType, nameof(errorType));
            Argument.AssertNotNull(requestURL, nameof(requestURL));

            EventId = eventId;
            ErrorType = errorType;
            RequestURL = requestURL;
        }

        /// <summary> The ID of the event. </summary>
        public int EventId { get; set; }
        /// <summary> The type of the error. </summary>
        public string ErrorType { get; set; }
        /// <summary> The url that was requested. </summary>
        public string RequestURL { get; set; }
    }
}
