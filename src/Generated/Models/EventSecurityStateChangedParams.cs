// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> The security state of the page changed. No longer being sent. </summary>
    public partial class EventSecurityStateChangedParams
    {
        /// <summary> Initializes a new instance of EventSecurityStateChangedParams. </summary>
        /// <param name="securityState"> Security state. </param>
        /// <param name="schemeIsCryptographic"> True if the page was loaded over cryptographic transport such as HTTPS. </param>
        /// <param name="explanations">
        /// Previously a list of explanations for the security state. Now always
        /// empty.
        /// </param>
        /// <param name="insecureContentStatus"> Information about insecure content on the page. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="securityState"/>, <paramref name="explanations"/> or <paramref name="insecureContentStatus"/> is null. </exception>
        public EventSecurityStateChangedParams(string securityState, bool schemeIsCryptographic, IEnumerable<TypeSecurityStateExplanation> explanations, TypeInsecureContentStatus insecureContentStatus)
        {
            Argument.AssertNotNull(securityState, nameof(securityState));
            Argument.AssertNotNull(explanations, nameof(explanations));
            Argument.AssertNotNull(insecureContentStatus, nameof(insecureContentStatus));

            SecurityState = securityState;
            SchemeIsCryptographic = schemeIsCryptographic;
            Explanations = explanations.ToList();
            InsecureContentStatus = insecureContentStatus;
        }

        /// <summary> Initializes a new instance of EventSecurityStateChangedParams. </summary>
        /// <param name="securityState"> Security state. </param>
        /// <param name="schemeIsCryptographic"> True if the page was loaded over cryptographic transport such as HTTPS. </param>
        /// <param name="explanations">
        /// Previously a list of explanations for the security state. Now always
        /// empty.
        /// </param>
        /// <param name="insecureContentStatus"> Information about insecure content on the page. </param>
        /// <param name="summary"> Overrides user-visible description of the state. Always omitted. </param>
        internal EventSecurityStateChangedParams(string securityState, bool schemeIsCryptographic, IList<TypeSecurityStateExplanation> explanations, TypeInsecureContentStatus insecureContentStatus, string summary)
        {
            SecurityState = securityState;
            SchemeIsCryptographic = schemeIsCryptographic;
            Explanations = explanations;
            InsecureContentStatus = insecureContentStatus;
            Summary = summary;
        }

        /// <summary> Security state. </summary>
        public string SecurityState { get; set; }
        /// <summary> True if the page was loaded over cryptographic transport such as HTTPS. </summary>
        public bool SchemeIsCryptographic { get; set; }
        /// <summary>
        /// Previously a list of explanations for the security state. Now always
        /// empty.
        /// </summary>
        public IList<TypeSecurityStateExplanation> Explanations { get; }
        /// <summary> Information about insecure content on the page. </summary>
        public TypeInsecureContentStatus InsecureContentStatus { get; set; }
        /// <summary> Overrides user-visible description of the state. Always omitted. </summary>
        public string Summary { get; set; }
    }
}
