// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Chrome.DevTools.Models
{
    /// <summary> Timing information for the request. </summary>
    public partial class TypeResourceTiming
    {
        /// <summary> Initializes a new instance of TypeResourceTiming. </summary>
        /// <param name="requestTime">
        /// Timing&apos;s requestTime is a baseline in seconds, while the other numbers are ticks in
        /// milliseconds relatively to this requestTime.
        /// </param>
        /// <param name="proxyStart"> Started resolving proxy. </param>
        /// <param name="proxyEnd"> Finished resolving proxy. </param>
        /// <param name="dnsStart"> Started DNS address resolve. </param>
        /// <param name="dnsEnd"> Finished DNS address resolve. </param>
        /// <param name="connectStart"> Started connecting to the remote host. </param>
        /// <param name="connectEnd"> Connected to the remote host. </param>
        /// <param name="sslStart"> Started SSL handshake. </param>
        /// <param name="sslEnd"> Finished SSL handshake. </param>
        /// <param name="workerStart"> Started running ServiceWorker. </param>
        /// <param name="workerReady"> Finished Starting ServiceWorker. </param>
        /// <param name="workerFetchStart"> Started fetch event. </param>
        /// <param name="workerRespondWithSettled"> Settled fetch event respondWith promise. </param>
        /// <param name="sendStart"> Started sending request. </param>
        /// <param name="sendEnd"> Finished sending request. </param>
        /// <param name="pushStart"> Time the server started pushing request. </param>
        /// <param name="pushEnd"> Time the server finished pushing request. </param>
        /// <param name="receiveHeadersEnd"> Finished receiving response headers. </param>
        public TypeResourceTiming(float requestTime, float proxyStart, float proxyEnd, float dnsStart, float dnsEnd, float connectStart, float connectEnd, float sslStart, float sslEnd, float workerStart, float workerReady, float workerFetchStart, float workerRespondWithSettled, float sendStart, float sendEnd, float pushStart, float pushEnd, float receiveHeadersEnd)
        {
            RequestTime = requestTime;
            ProxyStart = proxyStart;
            ProxyEnd = proxyEnd;
            DnsStart = dnsStart;
            DnsEnd = dnsEnd;
            ConnectStart = connectStart;
            ConnectEnd = connectEnd;
            SslStart = sslStart;
            SslEnd = sslEnd;
            WorkerStart = workerStart;
            WorkerReady = workerReady;
            WorkerFetchStart = workerFetchStart;
            WorkerRespondWithSettled = workerRespondWithSettled;
            SendStart = sendStart;
            SendEnd = sendEnd;
            PushStart = pushStart;
            PushEnd = pushEnd;
            ReceiveHeadersEnd = receiveHeadersEnd;
        }

        /// <summary>
        /// Timing&apos;s requestTime is a baseline in seconds, while the other numbers are ticks in
        /// milliseconds relatively to this requestTime.
        /// </summary>
        public float RequestTime { get; set; }
        /// <summary> Started resolving proxy. </summary>
        public float ProxyStart { get; set; }
        /// <summary> Finished resolving proxy. </summary>
        public float ProxyEnd { get; set; }
        /// <summary> Started DNS address resolve. </summary>
        public float DnsStart { get; set; }
        /// <summary> Finished DNS address resolve. </summary>
        public float DnsEnd { get; set; }
        /// <summary> Started connecting to the remote host. </summary>
        public float ConnectStart { get; set; }
        /// <summary> Connected to the remote host. </summary>
        public float ConnectEnd { get; set; }
        /// <summary> Started SSL handshake. </summary>
        public float SslStart { get; set; }
        /// <summary> Finished SSL handshake. </summary>
        public float SslEnd { get; set; }
        /// <summary> Started running ServiceWorker. </summary>
        public float WorkerStart { get; set; }
        /// <summary> Finished Starting ServiceWorker. </summary>
        public float WorkerReady { get; set; }
        /// <summary> Started fetch event. </summary>
        public float WorkerFetchStart { get; set; }
        /// <summary> Settled fetch event respondWith promise. </summary>
        public float WorkerRespondWithSettled { get; set; }
        /// <summary> Started sending request. </summary>
        public float SendStart { get; set; }
        /// <summary> Finished sending request. </summary>
        public float SendEnd { get; set; }
        /// <summary> Time the server started pushing request. </summary>
        public float PushStart { get; set; }
        /// <summary> Time the server finished pushing request. </summary>
        public float PushEnd { get; set; }
        /// <summary> Finished receiving response headers. </summary>
        public float ReceiveHeadersEnd { get; set; }
    }
}
