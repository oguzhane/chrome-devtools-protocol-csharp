// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    [JsonConverter(typeof(EventResponseReceivedExtraInfoParamsConverter))]
    public partial class EventResponseReceivedExtraInfoParams : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("requestId"u8);
            writer.WriteStringValue(RequestId);
            writer.WritePropertyName("blockedCookies"u8);
            writer.WriteStartArray();
            foreach (var item in BlockedCookies)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            writer.WritePropertyName("headers"u8);
            writer.WriteObjectValue(Headers);
            writer.WritePropertyName("resourceIPAddressSpace"u8);
            writer.WriteStringValue(ResourceIPAddressSpace);
            writer.WritePropertyName("statusCode"u8);
            writer.WriteNumberValue(StatusCode);
            if (Optional.IsDefined(HeadersText))
            {
                writer.WritePropertyName("headersText"u8);
                writer.WriteStringValue(HeadersText);
            }
            if (Optional.IsDefined(CookiePartitionKey))
            {
                writer.WritePropertyName("cookiePartitionKey"u8);
                writer.WriteStringValue(CookiePartitionKey);
            }
            if (Optional.IsDefined(CookiePartitionKeyOpaque))
            {
                writer.WritePropertyName("cookiePartitionKeyOpaque"u8);
                writer.WriteBooleanValue(CookiePartitionKeyOpaque.Value);
            }
            writer.WriteEndObject();
        }

        internal static EventResponseReceivedExtraInfoParams DeserializeEventResponseReceivedExtraInfoParams(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string requestId = default;
            IList<TypeBlockedSetCookieWithReason> blockedCookies = default;
            object headers = default;
            string resourceIPAddressSpace = default;
            int statusCode = default;
            Optional<string> headersText = default;
            Optional<string> cookiePartitionKey = default;
            Optional<bool> cookiePartitionKeyOpaque = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("requestId"u8))
                {
                    requestId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("blockedCookies"u8))
                {
                    List<TypeBlockedSetCookieWithReason> array = new List<TypeBlockedSetCookieWithReason>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(TypeBlockedSetCookieWithReason.DeserializeTypeBlockedSetCookieWithReason(item));
                    }
                    blockedCookies = array;
                    continue;
                }
                if (property.NameEquals("headers"u8))
                {
                    headers = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("resourceIPAddressSpace"u8))
                {
                    resourceIPAddressSpace = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("statusCode"u8))
                {
                    statusCode = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("headersText"u8))
                {
                    headersText = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cookiePartitionKey"u8))
                {
                    cookiePartitionKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cookiePartitionKeyOpaque"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cookiePartitionKeyOpaque = property.Value.GetBoolean();
                    continue;
                }
            }
            return new EventResponseReceivedExtraInfoParams(requestId, blockedCookies, headers, resourceIPAddressSpace, statusCode, headersText.Value, cookiePartitionKey.Value, Optional.ToNullable(cookiePartitionKeyOpaque));
        }

        internal partial class EventResponseReceivedExtraInfoParamsConverter : JsonConverter<EventResponseReceivedExtraInfoParams>
        {
            public override void Write(Utf8JsonWriter writer, EventResponseReceivedExtraInfoParams model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override EventResponseReceivedExtraInfoParams Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeEventResponseReceivedExtraInfoParams(document.RootElement);
            }
        }
    }
}
