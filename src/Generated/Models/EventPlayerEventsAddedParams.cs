// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Send events as a list, allowing them to be batched on the browser for less
    /// congestion. If batched, events must ALWAYS be in chronological order.
    /// </summary>
    public partial class EventPlayerEventsAddedParams
    {
        /// <summary> Initializes a new instance of EventPlayerEventsAddedParams. </summary>
        /// <param name="playerId"> Players will get an ID that is unique within the agent context. </param>
        /// <param name="events"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="playerId"/> or <paramref name="events"/> is null. </exception>
        public EventPlayerEventsAddedParams(string playerId, IEnumerable<TypePlayerEvent> events)
        {
            Argument.AssertNotNull(playerId, nameof(playerId));
            Argument.AssertNotNull(events, nameof(events));

            PlayerId = playerId;
            Events = events.ToList();
        }

        /// <summary> Initializes a new instance of EventPlayerEventsAddedParams. </summary>
        /// <param name="playerId"> Players will get an ID that is unique within the agent context. </param>
        /// <param name="events"></param>
        internal EventPlayerEventsAddedParams(string playerId, IList<TypePlayerEvent> events)
        {
            PlayerId = playerId;
            Events = events;
        }

        /// <summary> Players will get an ID that is unique within the agent context. </summary>
        public string PlayerId { get; set; }
        /// <summary> Gets the events. </summary>
        public IList<TypePlayerEvent> Events { get; }
    }
}
