// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> A cookie with was not sent with a request with the corresponding reason. </summary>
    public partial class TypeBlockedCookieWithReason
    {
        /// <summary> Initializes a new instance of TypeBlockedCookieWithReason. </summary>
        /// <param name="blockedReasons"> The reason(s) the cookie was blocked. </param>
        /// <param name="cookie"> The cookie object representing the cookie which was not sent. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="blockedReasons"/> or <paramref name="cookie"/> is null. </exception>
        public TypeBlockedCookieWithReason(IEnumerable<string> blockedReasons, TypeCookie cookie)
        {
            Argument.AssertNotNull(blockedReasons, nameof(blockedReasons));
            Argument.AssertNotNull(cookie, nameof(cookie));

            BlockedReasons = blockedReasons.ToList();
            Cookie = cookie;
        }

        /// <summary> Initializes a new instance of TypeBlockedCookieWithReason. </summary>
        /// <param name="blockedReasons"> The reason(s) the cookie was blocked. </param>
        /// <param name="cookie"> The cookie object representing the cookie which was not sent. </param>
        internal TypeBlockedCookieWithReason(IList<string> blockedReasons, TypeCookie cookie)
        {
            BlockedReasons = blockedReasons;
            Cookie = cookie;
        }

        /// <summary> The reason(s) the cookie was blocked. </summary>
        public IList<string> BlockedReasons { get; }
        /// <summary> The cookie object representing the cookie which was not sent. </summary>
        public TypeCookie Cookie { get; set; }
    }
}
