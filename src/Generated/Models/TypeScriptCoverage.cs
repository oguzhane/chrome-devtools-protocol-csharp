// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Coverage data for a JavaScript script. </summary>
    public partial class TypeScriptCoverage
    {
        /// <summary> Initializes a new instance of TypeScriptCoverage. </summary>
        /// <param name="scriptId"> JavaScript script id. </param>
        /// <param name="url"> JavaScript script name or url. </param>
        /// <param name="functions"> Functions contained in the script that has coverage data. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scriptId"/>, <paramref name="url"/> or <paramref name="functions"/> is null. </exception>
        public TypeScriptCoverage(string scriptId, string url, IEnumerable<TypeFunctionCoverage> functions)
        {
            Argument.AssertNotNull(scriptId, nameof(scriptId));
            Argument.AssertNotNull(url, nameof(url));
            Argument.AssertNotNull(functions, nameof(functions));

            ScriptId = scriptId;
            Url = url;
            Functions = functions.ToList();
        }

        /// <summary> Initializes a new instance of TypeScriptCoverage. </summary>
        /// <param name="scriptId"> JavaScript script id. </param>
        /// <param name="url"> JavaScript script name or url. </param>
        /// <param name="functions"> Functions contained in the script that has coverage data. </param>
        internal TypeScriptCoverage(string scriptId, string url, IList<TypeFunctionCoverage> functions)
        {
            ScriptId = scriptId;
            Url = url;
            Functions = functions;
        }

        /// <summary> JavaScript script id. </summary>
        public string ScriptId { get; set; }
        /// <summary> JavaScript script name or url. </summary>
        public string Url { get; set; }
        /// <summary> Functions contained in the script that has coverage data. </summary>
        public IList<TypeFunctionCoverage> Functions { get; }
    }
}
