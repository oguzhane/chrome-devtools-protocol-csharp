// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> The TypeMixedContentIssueDetails. </summary>
    public partial class TypeMixedContentIssueDetails
    {
        /// <summary> Initializes a new instance of TypeMixedContentIssueDetails. </summary>
        /// <param name="resolutionStatus"> The way the mixed content issue is being resolved. </param>
        /// <param name="insecureURL"> The unsafe http url causing the mixed content issue. </param>
        /// <param name="mainResourceURL"> The url responsible for the call to an unsafe url. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resolutionStatus"/>, <paramref name="insecureURL"/> or <paramref name="mainResourceURL"/> is null. </exception>
        public TypeMixedContentIssueDetails(string resolutionStatus, string insecureURL, string mainResourceURL)
        {
            Argument.AssertNotNull(resolutionStatus, nameof(resolutionStatus));
            Argument.AssertNotNull(insecureURL, nameof(insecureURL));
            Argument.AssertNotNull(mainResourceURL, nameof(mainResourceURL));

            ResolutionStatus = resolutionStatus;
            InsecureURL = insecureURL;
            MainResourceURL = mainResourceURL;
        }

        /// <summary> Initializes a new instance of TypeMixedContentIssueDetails. </summary>
        /// <param name="resourceType">
        /// The type of resource causing the mixed content issue (css, js, iframe,
        /// form,...). Marked as optional because it is mapped to from
        /// blink::mojom::RequestContextType, which will be replaced
        /// by network::mojom::RequestDestination
        /// </param>
        /// <param name="resolutionStatus"> The way the mixed content issue is being resolved. </param>
        /// <param name="insecureURL"> The unsafe http url causing the mixed content issue. </param>
        /// <param name="mainResourceURL"> The url responsible for the call to an unsafe url. </param>
        /// <param name="request">
        /// The mixed content request.
        /// Does not always exist (e.g. for unsafe form submission urls).
        /// </param>
        /// <param name="frame"> Optional because not every mixed content issue is necessarily linked to a frame. </param>
        internal TypeMixedContentIssueDetails(string resourceType, string resolutionStatus, string insecureURL, string mainResourceURL, TypeAffectedRequest request, TypeAffectedFrame frame)
        {
            ResourceType = resourceType;
            ResolutionStatus = resolutionStatus;
            InsecureURL = insecureURL;
            MainResourceURL = mainResourceURL;
            Request = request;
            Frame = frame;
        }

        /// <summary>
        /// The type of resource causing the mixed content issue (css, js, iframe,
        /// form,...). Marked as optional because it is mapped to from
        /// blink::mojom::RequestContextType, which will be replaced
        /// by network::mojom::RequestDestination
        /// </summary>
        public string ResourceType { get; set; }
        /// <summary> The way the mixed content issue is being resolved. </summary>
        public string ResolutionStatus { get; set; }
        /// <summary> The unsafe http url causing the mixed content issue. </summary>
        public string InsecureURL { get; set; }
        /// <summary> The url responsible for the call to an unsafe url. </summary>
        public string MainResourceURL { get; set; }
        /// <summary>
        /// The mixed content request.
        /// Does not always exist (e.g. for unsafe form submission urls).
        /// </summary>
        public TypeAffectedRequest Request { get; set; }
        /// <summary> Optional because not every mixed content issue is necessarily linked to a frame. </summary>
        public TypeAffectedFrame Frame { get; set; }
    }
}
