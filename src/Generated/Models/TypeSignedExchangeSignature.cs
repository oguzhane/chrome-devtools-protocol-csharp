// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Information about a signed exchange signature.
    /// https://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#rfc.section.3.1
    /// </summary>
    public partial class TypeSignedExchangeSignature
    {
        /// <summary> Initializes a new instance of TypeSignedExchangeSignature. </summary>
        /// <param name="label"> Signed exchange signature label. </param>
        /// <param name="signature"> The hex string of signed exchange signature. </param>
        /// <param name="integrity"> Signed exchange signature integrity. </param>
        /// <param name="validityUrl"> Signed exchange signature validity Url. </param>
        /// <param name="date"> Signed exchange signature date. </param>
        /// <param name="expires"> Signed exchange signature expires. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="label"/>, <paramref name="signature"/>, <paramref name="integrity"/> or <paramref name="validityUrl"/> is null. </exception>
        public TypeSignedExchangeSignature(string label, string signature, string integrity, string validityUrl, int date, int expires)
        {
            Argument.AssertNotNull(label, nameof(label));
            Argument.AssertNotNull(signature, nameof(signature));
            Argument.AssertNotNull(integrity, nameof(integrity));
            Argument.AssertNotNull(validityUrl, nameof(validityUrl));

            Label = label;
            Signature = signature;
            Integrity = integrity;
            ValidityUrl = validityUrl;
            Date = date;
            Expires = expires;
            Certificates = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of TypeSignedExchangeSignature. </summary>
        /// <param name="label"> Signed exchange signature label. </param>
        /// <param name="signature"> The hex string of signed exchange signature. </param>
        /// <param name="integrity"> Signed exchange signature integrity. </param>
        /// <param name="certUrl"> Signed exchange signature cert Url. </param>
        /// <param name="certSha256"> The hex string of signed exchange signature cert sha256. </param>
        /// <param name="validityUrl"> Signed exchange signature validity Url. </param>
        /// <param name="date"> Signed exchange signature date. </param>
        /// <param name="expires"> Signed exchange signature expires. </param>
        /// <param name="certificates"> The encoded certificates. </param>
        internal TypeSignedExchangeSignature(string label, string signature, string integrity, string certUrl, string certSha256, string validityUrl, int date, int expires, IList<string> certificates)
        {
            Label = label;
            Signature = signature;
            Integrity = integrity;
            CertUrl = certUrl;
            CertSha256 = certSha256;
            ValidityUrl = validityUrl;
            Date = date;
            Expires = expires;
            Certificates = certificates;
        }

        /// <summary> Signed exchange signature label. </summary>
        public string Label { get; set; }
        /// <summary> The hex string of signed exchange signature. </summary>
        public string Signature { get; set; }
        /// <summary> Signed exchange signature integrity. </summary>
        public string Integrity { get; set; }
        /// <summary> Signed exchange signature cert Url. </summary>
        public string CertUrl { get; set; }
        /// <summary> The hex string of signed exchange signature cert sha256. </summary>
        public string CertSha256 { get; set; }
        /// <summary> Signed exchange signature validity Url. </summary>
        public string ValidityUrl { get; set; }
        /// <summary> Signed exchange signature date. </summary>
        public int Date { get; set; }
        /// <summary> Signed exchange signature expires. </summary>
        public int Expires { get; set; }
        /// <summary> The encoded certificates. </summary>
        public IList<string> Certificates { get; }
    }
}
