// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    [JsonConverter(typeof(TypeLowTextContrastIssueDetailsConverter))]
    public partial class TypeLowTextContrastIssueDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("violatingNodeId"u8);
            writer.WriteNumberValue(ViolatingNodeId);
            writer.WritePropertyName("violatingNodeSelector"u8);
            writer.WriteStringValue(ViolatingNodeSelector);
            writer.WritePropertyName("contrastRatio"u8);
            writer.WriteNumberValue(ContrastRatio);
            writer.WritePropertyName("thresholdAA"u8);
            writer.WriteNumberValue(ThresholdAA);
            writer.WritePropertyName("thresholdAAA"u8);
            writer.WriteNumberValue(ThresholdAAA);
            writer.WritePropertyName("fontSize"u8);
            writer.WriteStringValue(FontSize);
            writer.WritePropertyName("fontWeight"u8);
            writer.WriteStringValue(FontWeight);
            writer.WriteEndObject();
        }

        internal static TypeLowTextContrastIssueDetails DeserializeTypeLowTextContrastIssueDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            int violatingNodeId = default;
            string violatingNodeSelector = default;
            float contrastRatio = default;
            float thresholdAA = default;
            float thresholdAAA = default;
            string fontSize = default;
            string fontWeight = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("violatingNodeId"u8))
                {
                    violatingNodeId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("violatingNodeSelector"u8))
                {
                    violatingNodeSelector = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("contrastRatio"u8))
                {
                    contrastRatio = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("thresholdAA"u8))
                {
                    thresholdAA = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("thresholdAAA"u8))
                {
                    thresholdAAA = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("fontSize"u8))
                {
                    fontSize = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fontWeight"u8))
                {
                    fontWeight = property.Value.GetString();
                    continue;
                }
            }
            return new TypeLowTextContrastIssueDetails(violatingNodeId, violatingNodeSelector, contrastRatio, thresholdAA, thresholdAAA, fontSize, fontWeight);
        }

        internal partial class TypeLowTextContrastIssueDetailsConverter : JsonConverter<TypeLowTextContrastIssueDetails>
        {
            public override void Write(Utf8JsonWriter writer, TypeLowTextContrastIssueDetails model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override TypeLowTextContrastIssueDetails Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeTypeLowTextContrastIssueDetails(document.RootElement);
            }
        }
    }
}
