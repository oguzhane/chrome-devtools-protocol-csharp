// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// TODO(crbug/1384419): Create a dedicated domain for preloading.
    /// Fired when a prefetch attempt is updated.
    /// </summary>
    public partial class EventPrefetchStatusUpdatedParams
    {
        /// <summary> Initializes a new instance of EventPrefetchStatusUpdatedParams. </summary>
        /// <param name="initiatingFrameId"> The frame id of the frame initiating prefetch. </param>
        /// <param name="prefetchUrl"></param>
        /// <param name="status"> List of Prefetch status, which refers to PreloadingTriggeringOutcome. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="initiatingFrameId"/>, <paramref name="prefetchUrl"/> or <paramref name="status"/> is null. </exception>
        public EventPrefetchStatusUpdatedParams(string initiatingFrameId, string prefetchUrl, string status)
        {
            Argument.AssertNotNull(initiatingFrameId, nameof(initiatingFrameId));
            Argument.AssertNotNull(prefetchUrl, nameof(prefetchUrl));
            Argument.AssertNotNull(status, nameof(status));

            InitiatingFrameId = initiatingFrameId;
            PrefetchUrl = prefetchUrl;
            Status = status;
        }

        /// <summary> The frame id of the frame initiating prefetch. </summary>
        public string InitiatingFrameId { get; set; }
        /// <summary> Gets or sets the prefetch url. </summary>
        public string PrefetchUrl { get; set; }
        /// <summary> List of Prefetch status, which refers to PreloadingTriggeringOutcome. </summary>
        public string Status { get; set; }
    }
}
