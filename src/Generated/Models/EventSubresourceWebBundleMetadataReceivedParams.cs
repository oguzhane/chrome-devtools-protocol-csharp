// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary>
    /// Fired once when parsing the .wbn file has succeeded.
    /// The event contains the information about the web bundle contents.
    /// </summary>
    public partial class EventSubresourceWebBundleMetadataReceivedParams
    {
        /// <summary> Initializes a new instance of EventSubresourceWebBundleMetadataReceivedParams. </summary>
        /// <param name="requestId"> Request identifier. Used to match this information to another event. </param>
        /// <param name="urls"> A list of URLs of resources in the subresource Web Bundle. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="requestId"/> or <paramref name="urls"/> is null. </exception>
        public EventSubresourceWebBundleMetadataReceivedParams(string requestId, IEnumerable<string> urls)
        {
            Argument.AssertNotNull(requestId, nameof(requestId));
            Argument.AssertNotNull(urls, nameof(urls));

            RequestId = requestId;
            Urls = urls.ToList();
        }

        /// <summary> Initializes a new instance of EventSubresourceWebBundleMetadataReceivedParams. </summary>
        /// <param name="requestId"> Request identifier. Used to match this information to another event. </param>
        /// <param name="urls"> A list of URLs of resources in the subresource Web Bundle. </param>
        internal EventSubresourceWebBundleMetadataReceivedParams(string requestId, IList<string> urls)
        {
            RequestId = requestId;
            Urls = urls;
        }

        /// <summary> Request identifier. Used to match this information to another event. </summary>
        public string RequestId { get; set; }
        /// <summary> A list of URLs of resources in the subresource Web Bundle. </summary>
        public IList<string> Urls { get; }
    }
}
