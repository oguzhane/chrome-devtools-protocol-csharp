// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Bundles a candidate URL with its reporting metadata. </summary>
    public partial class TypeSharedStorageUrlWithMetadata
    {
        /// <summary> Initializes a new instance of TypeSharedStorageUrlWithMetadata. </summary>
        /// <param name="url"> Spec of candidate URL. </param>
        /// <param name="reportingMetadata"> Any associated reporting metadata. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="url"/> or <paramref name="reportingMetadata"/> is null. </exception>
        public TypeSharedStorageUrlWithMetadata(string url, IEnumerable<TypeSharedStorageReportingMetadata> reportingMetadata)
        {
            Argument.AssertNotNull(url, nameof(url));
            Argument.AssertNotNull(reportingMetadata, nameof(reportingMetadata));

            Url = url;
            ReportingMetadata = reportingMetadata.ToList();
        }

        /// <summary> Initializes a new instance of TypeSharedStorageUrlWithMetadata. </summary>
        /// <param name="url"> Spec of candidate URL. </param>
        /// <param name="reportingMetadata"> Any associated reporting metadata. </param>
        internal TypeSharedStorageUrlWithMetadata(string url, IList<TypeSharedStorageReportingMetadata> reportingMetadata)
        {
            Url = url;
            ReportingMetadata = reportingMetadata;
        }

        /// <summary> Spec of candidate URL. </summary>
        public string Url { get; set; }
        /// <summary> Any associated reporting metadata. </summary>
        public IList<TypeSharedStorageReportingMetadata> ReportingMetadata { get; }
    }
}
