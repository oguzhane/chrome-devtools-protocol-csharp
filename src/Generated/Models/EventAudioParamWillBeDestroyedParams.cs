// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Notifies that an existing AudioParam has been destroyed. </summary>
    public partial class EventAudioParamWillBeDestroyedParams
    {
        /// <summary> Initializes a new instance of EventAudioParamWillBeDestroyedParams. </summary>
        /// <param name="contextId"> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </param>
        /// <param name="nodeId"> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </param>
        /// <param name="paramId"> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="contextId"/>, <paramref name="nodeId"/> or <paramref name="paramId"/> is null. </exception>
        public EventAudioParamWillBeDestroyedParams(string contextId, string nodeId, string paramId)
        {
            Argument.AssertNotNull(contextId, nameof(contextId));
            Argument.AssertNotNull(nodeId, nameof(nodeId));
            Argument.AssertNotNull(paramId, nameof(paramId));

            ContextId = contextId;
            NodeId = nodeId;
            ParamId = paramId;
        }

        /// <summary> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </summary>
        public string ContextId { get; set; }
        /// <summary> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </summary>
        public string NodeId { get; set; }
        /// <summary> An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API. </summary>
        public string ParamId { get; set; }
    }
}
