// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Description of an isolated world. </summary>
    public partial class TypeExecutionContextDescription
    {
        /// <summary> Initializes a new instance of TypeExecutionContextDescription. </summary>
        /// <param name="id">
        /// Unique id of the execution context. It can be used to specify in which execution context
        /// script evaluation should be performed.
        /// </param>
        /// <param name="origin"> Execution context origin. </param>
        /// <param name="name"> Human readable name describing given context. </param>
        /// <param name="uniqueId">
        /// A system-unique execution context identifier. Unlike the id, this is unique across
        /// multiple processes, so can be reliably used to identify specific context while backend
        /// performs a cross-process navigation.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="origin"/>, <paramref name="name"/> or <paramref name="uniqueId"/> is null. </exception>
        public TypeExecutionContextDescription(int id, string origin, string name, string uniqueId)
        {
            Argument.AssertNotNull(origin, nameof(origin));
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(uniqueId, nameof(uniqueId));

            Id = id;
            Origin = origin;
            Name = name;
            UniqueId = uniqueId;
        }

        /// <summary> Initializes a new instance of TypeExecutionContextDescription. </summary>
        /// <param name="id">
        /// Unique id of the execution context. It can be used to specify in which execution context
        /// script evaluation should be performed.
        /// </param>
        /// <param name="origin"> Execution context origin. </param>
        /// <param name="name"> Human readable name describing given context. </param>
        /// <param name="uniqueId">
        /// A system-unique execution context identifier. Unlike the id, this is unique across
        /// multiple processes, so can be reliably used to identify specific context while backend
        /// performs a cross-process navigation.
        /// </param>
        /// <param name="auxData"> Embedder-specific auxiliary data. </param>
        internal TypeExecutionContextDescription(int id, string origin, string name, string uniqueId, object auxData)
        {
            Id = id;
            Origin = origin;
            Name = name;
            UniqueId = uniqueId;
            AuxData = auxData;
        }

        /// <summary>
        /// Unique id of the execution context. It can be used to specify in which execution context
        /// script evaluation should be performed.
        /// </summary>
        public int Id { get; set; }
        /// <summary> Execution context origin. </summary>
        public string Origin { get; set; }
        /// <summary> Human readable name describing given context. </summary>
        public string Name { get; set; }
        /// <summary>
        /// A system-unique execution context identifier. Unlike the id, this is unique across
        /// multiple processes, so can be reliably used to identify specific context while backend
        /// performs a cross-process navigation.
        /// </summary>
        public string UniqueId { get; set; }
        /// <summary> Embedder-specific auxiliary data. </summary>
        public object AuxData { get; set; }
    }
}
