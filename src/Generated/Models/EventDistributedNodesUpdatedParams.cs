// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Chrome.DevTools.Models
{
    /// <summary> Called when distribution is changed. </summary>
    public partial class EventDistributedNodesUpdatedParams
    {
        /// <summary> Initializes a new instance of EventDistributedNodesUpdatedParams. </summary>
        /// <param name="insertionPointId"> Insertion point where distributed nodes were updated. </param>
        /// <param name="distributedNodes"> Distributed nodes for given insertion point. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="distributedNodes"/> is null. </exception>
        public EventDistributedNodesUpdatedParams(int insertionPointId, IEnumerable<TypeBackendNode> distributedNodes)
        {
            Argument.AssertNotNull(distributedNodes, nameof(distributedNodes));

            InsertionPointId = insertionPointId;
            DistributedNodes = distributedNodes.ToList();
        }

        /// <summary> Initializes a new instance of EventDistributedNodesUpdatedParams. </summary>
        /// <param name="insertionPointId"> Insertion point where distributed nodes were updated. </param>
        /// <param name="distributedNodes"> Distributed nodes for given insertion point. </param>
        internal EventDistributedNodesUpdatedParams(int insertionPointId, IList<TypeBackendNode> distributedNodes)
        {
            InsertionPointId = insertionPointId;
            DistributedNodes = distributedNodes;
        }

        /// <summary> Insertion point where distributed nodes were updated. </summary>
        public int InsertionPointId { get; set; }
        /// <summary> Distributed nodes for given insertion point. </summary>
        public IList<TypeBackendNode> DistributedNodes { get; }
    }
}
